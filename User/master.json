{
  "code": {
    "default": {
      "webgazer": "<!--\n    This is based on code from OSF repository https://osf.io/jmz79/ that accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017.\n\n    Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a freeviewing task that works on Collector\n-->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <link\n      href=\"libraries/webgazer/css/jquery-ui.css\"\n      type=\"text/css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"libraries/webgazer/css/jquery.mobile-1.4.5.css\"\n      type=\"text/css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"libraries/webgazer/css/tolcam.css\"\n      type=\"text/css\"\n      rel=\"stylesheet\"\n    />\n    <script src=\"libraries/webgazer/js/jquery-1.12.3.min.js\"></script>\n    <script src=\"libraries/webgazer/js/jquery-ui.js\"></script>\n    <script src=\"libraries/webgazer/js/jquery.mobile-1.4.2.min.js\"></script>\n    <script src=\"libraries/webgazer/js/simpleheat.js\"></script>\n  </head>\n  <style>\n    .stimuli_img{\n      width: {{image_width}};\n      object-fit: fill;\n      vertical-align: middle;\n      height: {{image_height}};\n      position: absolute;\n      transform: translate(-50%, 0);\n      left: 50%;\n      background-repeat: no-repeat;\n      background-size: contain;\n    }\n    #stimuli_fixation{\n\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -moz-transform: translateX(-50%) translateY(-50%);\n      -webkit-transform: translateX(-50%) translateY(-50%);\n      transform: translateX(-50%) translateY(-50%);\n      font-size:100px;\n      text-align:center;\n      height:150px;\n    }\n    #stimuli_img_left{\n      margin-left: {{left_position}};\n    }\n    #stimuli_img_right{\n      /* left:  75%; */\n      margin-left: {{right_position}};\n    }\n  </style>\n  <body>\n    <div id=\"instruction\">\n      <div id=\"instruction_1\" class=\"instruction_page\">\n        This experiment is based on code from the OSF repository\n        <a href=\"https://osf.io/jmz79/\" target=\"_blank\"\n          >https://osf.io/jmz79/</a\n        >\n        which accompanies the publication \"Online webcam-based eye tracking in\n        cognitive science: a first look\" by Semmelmann & Weigelt, published in\n        Behavior Research Methods in 2017. Please find the abstract and\n        information about the code, analyses, and data below. This work is\n        intended for scientific use only. Written by Kilian Semmelmann,\n        tolcam@ksemmelm.de, 2017. <br /><br />\n\n        Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a\n        task that works on Collector.\n      </div>\n\n      <div id=\"instruction_2\" class=\"instruction_page\">\n        <h1>Webcam Setup</h1>\n        <br />\n        <div id=\"setup_after\">\n          You can take a short break and move your head. Before continuing,\n          please follow the instructions noted below.<br />\n        </div>\n        <br />\n        Please turn off your mobile phone and close all other programs and\n        websites. Then carefully read and follow these instructions:<br />\n        <img\n          src=\"libraries/webgazer/imgs/instructions_donttilt.png\"\n          style=\"width: 100%; margin-top: 20px; margin-bottom: 20px\"\n        />\n        <br />\n        If possible, please adjust your position until your face matches the\n        picture below as much as possible:<br />\n        <br />\n        <table>\n          <tr>\n            <td>\n              <img\n                style=\"\n                  height: 300px;\n                  width: 400px;\n                  -webkit-transform: scaleX(-1);\n                  transform: scaleX(-1);\n                \"\n                src=\"libraries/webgazer/imgs/ideal_pose.png\"\n              />\n            </td>\n            <td>\n              <span id=\"webcam_insert\"></span>\n            </td>\n          </tr>\n        </table>\n        <br />\n        <div id=\"setup_first\">\n          This study consists of multiple five-minute parts with pauses\n          inbetween. After you clicked \"start\", please avoid moving your head.\n          If you move too much, the calibration can fail and you might not be\n          able to finish the study.\n        </div>\n        <br />\n      </div>\n\n      <div id=\"instruction_3\" class=\"instruction_page\">\n        <div id=\"beforetherest\">\n          <h1>Proceed</h1>\n          <br />\n          Click \"Proceed\" to move onto the next trial\n          <button onclick=\"Phase.submit()\" class=\"btn\">Proceed</button>\n        </div>\n      </div>\n\n      <div id=\"instruction_back\" class=\"instruction_navigation\">\n        <div id=\"instruction_back_text\">&lt;</div>\n      </div>\n      <div id=\"instruction_continue\" class=\"instruction_navigation\">\n        <div id=\"instruction_continue_text\">&gt;</div>\n      </div>\n    </div>\n\n    <div id=\"calibration_dot\" class=\"stimuli\">\n      <div id=\"calibration_cnt\">0</div>\n    </div>\n    <div id=\"stimulus\" class=\"stimuli\">\n      <img src=\"libraries/webgazer/imgs/talking.jpg\" />\n    </div>\n    <div id=\"stimuli_dot\" class=\"stimuli\"></div>\n    <div id=\"stimuli_bar\" class=\"stimuli\"></div>\n    <div id=\"stimuli_fixation\" class=\"stimuli\">+</div>\n    <div id=\"stimuli_prime\" class=\"stimuli\"></div>\n    <div id=\"stimuli_target\" class=\"stimuli\">X</div>\n    <img id=\"stimuli_img_left\" class=\"stimuli stimuli_img\" />\n    <img id=\"stimuli_img_right\" class=\"stimuli stimuli_img\" />\n    <div id=\"instruction_message\"></div>\n\n    <div id=\"message\">no message</div>\n\n    <!-- data quality info -->\n    <input type=\"hidden\" name=\"window_inner_height\" id=\"window_inner_height\" />\n    <input type=\"hidden\" name=\"window_inner_width\" id=\"window_inner_width\" />\n    <input type=\"hidden\" name=\"fixation_rts\" id=\"fixation_rts\" />\n  </body>\n</html>\n<script>\n  //////////////////////\n  // Borcsok variables\n  //////////////////////\n\n  var all_fixation_rts = [];\n\n  var image_pair;\n  Phase.set_timer(function () {\n    function refuse_height() {\n      bootbox.confirm(\n        \"Your window height needs to be at least {{min_height}} before starting. Please make your window as big as possible before proceeding.\",\n        function (result) {\n          if (\n            window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\", \"\"))\n          ) {\n            refuse_height();\n          } else {\n            $(\"#window_inner_height\").val(window.innerHeight);\n            $(\"#window_inner_width\").val(window.innerWidth);\n          }\n        }\n      );\n    }\n    function refuse_width() {\n      bootbox.confirm(\n        \"Your window width needs to be at least {{min_width}} before starting. Please make your window as big as possible before proceeding.\",\n        function (result) {\n          if (\n            window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\", \"\"))\n          ) {\n            refuse_width();\n          } else {\n            $(\"#window_inner_height\").val(window.innerHeight);\n            $(\"#window_inner_width\").val(window.innerWidth);\n          }\n        }\n      );\n    }\n    if (window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\", \"\"))) {\n      refuse_height();\n    } else {\n      $(\"#window_inner_height\").val(window.innerHeight);\n      $(\"#window_inner_width\").val(window.innerWidth);\n    }\n    if (window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\", \"\"))) {\n      refuse_width();\n    } else {\n      $(\"#window_inner_height\").val(window.innerHeight);\n      $(\"#window_inner_width\").val(window.innerWidth);\n    }\n  }, 0);\n\n  //////////////////////\n  // default settings //\n  //////////////////////\n\n  var calibrations = \"{{calibrations}}\";\n  var freeview_image_file = \"{{freeview_image_file}}\".toLowerCase();\n  var design_type = \"{{design_type}}\";\n  var calibration_skip = \"{{calibration_skip}}\";\n  var image_height = \"{{image_height}}\";\n  var image_width = \"{{image_width}}\";\n  var left_side = \"{{left_side}}\";\n  var save_script = \"{{save_script}}\";\n  var stim_duration = \"{{stim_duration}}\";\n  var trials = \"{{trials}}\";\n  var trial_order = \"{{trial_order}}\";\n\n  if (calibrations.indexOf(\"calibrations\") !== -1) {\n    calibrations = 13;\n  }\n  if (calibration_skip.indexOf(\"calibration_skip\") !== -1) {\n    calibration_skip = \"no\";\n  }\n  if (stim_duration.indexOf(\"stim_duration\") !== -1) {\n    stim_duration = 2000;\n  }\n  if (left_side.indexOf(\"left_side\") !== -1) {\n    left_side = \"counterbalance\";\n  }\n\n  /************************************\n   * HELPER FUNCTIONS\n   ************************************/\n  /**\n   * Shuffles array in place.\n   * @param {Array} a items The array containing the items.\n   * @author http://stackoverflow.com/a/2450976/4175553\n   */\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  /************************************\n   * WEBCAM PARAMETERS\n   ************************************/\n  var cam = {};\n  cam.overlay = \"\";\n  cam.width = 400;\n  cam.height = 300;\n  cam.topDist = \"0px\";\n  cam.leftDist = \"0px\";\n  cam.recording = 0;\n  cam.validating = 0;\n  cam.calibrating = 0;\n  cam.initialized = 0;\n\n  /************************************\n   * CALIBRATION PARAMETERS\n   ************************************/\n  var calibrating = 0;\n  var t_calibration_start;\n  var calibration_no = 0;\n  var calibration = {};\n  calibration.points = [];\n  calibration.method = \"watch\"; // click or watch\n  calibration.calibrations = calibrations; // how many calibration dots\n  calibration.duration = 20; // how often does one position get sampled\n  calibration.instruction =\n    \"Please look at each dot until <br /> it disappears. <br /><br />Please do not move your head,<br />only move your eyes.\";\n  if (\"{{skip_instruct}}\" == \"on\") {\n    calibration.instruction_duration = 0;\n  } else {\n    calibration.instruction_duration = 10000;\n  }\n\n  /************************************\n   * VALIDATION PARAMETERS\n   ************************************/\n  var validating = 0;\n  var validation_no = 0;\n  var validation_current = { x: 0, y: 0 };\n  var validation_attempt = 1;\n  var validation = {};\n  validation.validations = 5;\n  validation.duration = 20;\n  validation.points = [];\n  validation.timeout = 20000; // if no validation happens within X ms, validation will be ended and re-calibrated\n  validation.attempts = 5; // how often can validation be failed PER validation\n  validation.distance = 200; // offset distance in pixel to be a valid validation sample\n\n  /************************************\n   * FREEVIEW PARAMETERS\n   *************************************/\n  var freeview_no = 0;\n\n  /************************************\n   * DESIGN\n   ************************************/\n  var design = {};\n  var block_no = 0;\n  var trial_no = 0;\n\n  eyetrack_designs = {\n    freeview: {\n      type: \"freeview\",\n      trials: trials,\n      iti: 500,\n      instruction: \"{{text}}\",\n      instruction_duration: 10000,\n    },\n    simple: {\n      type: \"simple\",\n      trials: 24,\n      iti: 500,\n      instruction:\n        \"Please look at the cross.<br />When the dot appears, please look at it.<br /><br /><br />Do not move your head, <br />only use your eyes.\",\n      instruction_duration: 5000,\n    },\n    pursuit: {\n      type: \"pursuit\",\n      trials: 24,\n      iti: 500,\n      instruction:\n        'A black dot will appear. Please <br />look at it. When it turns <span style=\"color: #dd494b;\">red</span>,<br /> Please follow its movement with your eyes.<br /><br />Do not move your head, <br />only use your eyes.',\n      instruction_duration: 7000,\n    },\n  };\n\n  if (\"{{skip_instruct}}\" == \"on\") {\n    eyetrack_designs.freeview.instruction_duration = 0;\n  }\n\n  design.blocks = [eyetrack_designs[[\"{{design_type}}\"]]];\n\n  //design.blocks = shuffle(design.blocks);\n  design.blocks_randomized = 1; // shall the blocks be shuffled?\n  design.trials_randomized = 1; // same for trials\n  design.calibrate = \"high\";\n  design.recalibrate = 1;\n\n  /************************************\n   * DATA VARIABLES\n   ************************************/\n  var data = [];\n  var data_current = {};\n  var status = \"-\";\n\n  /**\ndata.design = jQuery.extend(true, {}, design);\n **/\n\n  /************************************\n   * SET UP WEBGAZER\n   ************************************/\n  function loadWebgazer() {\n    $(\"canvas\").remove();\n    cam.initialized = 0;\n    $.getScript(\"libraries/webgazer/js/webgazer_old.js\")\n      .done(function (script, textStatus) {\n        initializeWebgazer();\n        $(\"#message\")\n          .html(\n            \"Please allow for access on your Webcam on the top part of the screen. <br /><br />Remember: We will NOT transmit your video, but only process it locally and transmit numbers to our server.\"\n          )\n          .show();\n      })\n      .fail(function (jqxhr, settings, exception) {\n        $(\"div.log\").text(\"Triggered ajaxError handler.\");\n      });\n  }\n\n  function initializeWebgazer() {\n    //webgazer.clearData()\n    webgazer\n      .setRegression(\"ridge\") /* currently must set regression and tracker */\n      .setTracker(\"clmtrackr\")\n      .setGazeListener(function (d, clock) {\n        //console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */\n        //console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */\n        if (d !== null) {\n          if (cam.calibrating == 1) {\n            var $cd = $(\"#calibration_dot\");\n            var cx = parseInt(Math.round($cd.offset().left));\n            var cy = parseInt(Math.round($cd.offset().top));\n            var cp = d;\n            var dist = Math.sqrt(\n              (cp.x - cx) * (cp.x - cx) + (cp.y - cy) * (cp.y - cy)\n            );\n            var c = $(\"#calibration_cnt\").html();\n            data_current.raw.push({\n              time: clock,\n              x: cp.x,\n              y: cp.y,\n              cx: cx,\n              cy: cy,\n              dist: dist,\n              c: c,\n            });\n          }\n\n          if (cam.validating == 1) {\n            // see whether dx and dy are within 100px radius of target\n            var dist = parseInt(\n              Math.sqrt(\n                (d.x - validation_current.x) * (d.x - validation_current.x) +\n                  (d.y - validation_current.y) * (d.y - validation_current.y)\n              )\n            );\n            var c = parseInt($(\"#calibration_cnt\").html());\n            if (dist < validation.distance) {\n              data_current.raw.push({\n                time: clock,\n                x: d.x,\n                y: d.y,\n                vx: validation_current.x,\n                vy: validation_current.y,\n                dist: dist,\n                c: c,\n                valid: 1,\n              });\n              if (c < calibration.duration) {\n                $(\"#calibration_cnt\").html(++c);\n              } else {\n                cam.validating = 0;\n                clearTimeout(t);\n                $(\"#calibration_dot\").hide();\n                validation_no++;\n                saveData();\n                setTimeout(\"validate();\", 500);\n              }\n            } else {\n              data_current.raw.push({\n                time: clock,\n                x: d.x,\n                y: d.y,\n                vx: validation_current.x,\n                vy: validation_current.y,\n                dist: dist,\n                c: c,\n                valid: 0,\n              });\n            }\n          }\n\n          if (cam.recording == 1) {\n            var tx = -1;\n            var ty = -1;\n            if (\n              data_current.task == \"simple\" ||\n              data_current.task == \"pursuit\"\n            ) {\n              var $sd = $(\"#stimuli_dot\");\n              var tx = parseInt(Math.round($sd.offset().left));\n              var ty = parseInt(Math.round($sd.offset().top));\n            }\n            data_current.raw.push({\n              time: clock,\n              x: d.x,\n              y: d.y,\n              tx: tx,\n              ty: ty,\n              status: status,\n            });\n            //console.log(data.trials[trial_no].raw.length + ' ' + d.x + ' ' + d.y);\n          }\n        }\n      })\n      .begin()\n      .showPredictionPoints(\n        false\n      ); /* shows a square every 100 milliseconds where current prediction is */\n\n    cl = webgazer.getTracker().clm;\n\n    checkWebgazer();\n  }\n\n  function checkWebgazer() {\n    if (webgazer.isReady()) {\n      console.log(\"webgazer is ready.\");\n      initializeCam();\n    } else {\n      setTimeout(checkWebgazer, 100);\n    }\n  }\n\n  /************************************\n   * SET UP WEBCAM\n   ************************************/\n  function initializeCam() {\n    var video = document.getElementById(\"webgazerVideoFeed\");\n    video.style.display = \"block\"; // block\n    video.style.position = \"relative\";\n    video.width = cam.width;\n    video.height = cam.height;\n    video.style.margin = \"0px\";\n    $(\"#webgazerVideoFeed\")\n      .css({\n        left: \"50%\",\n        \"-webkit-transform\": \"scaleX(-1)\",\n        transform: \"scaleX(-1) translate(50%, 0)\",\n        margin: \"20px\",\n      })\n      .detach()\n      .insertAfter(\"#webcam_insert\")\n      .get(0)\n      .play();\n\n    webgazer.params.imgWidth = cam.width;\n    webgazer.params.imgHeight = cam.height;\n\n    cam.overlay = document.getElementById(\"overlay\");\n    if (cam.overlay === null) {\n      cam.overlay = document.createElement(\"canvas\");\n      cam.overlay.id = \"overlay\";\n      document.body.appendChild(cam.overlay);\n    }\n    cam.overlay.style.position = \"absolute\";\n    cam.overlay.width = cam.width;\n    cam.overlay.height = cam.height;\n    cam.overlay.style.top = cam.topDist;\n    cam.overlay.style.left = cam.leftDist;\n    cam.overlay.style.margin = \"0px\";\n\n    cam.initialized = 1;\n\n    $(\"#message\").html(\"Webcam access successful.\").delay(1000).fadeOut(1000);\n    $(\"#instruction_continue\").show();\n    parent.parent.requestFullScreen(parent.parent.document.documentElement);\n  }\n\n  /************************************\n   * START BLOCKS\n   ************************************/\n  function prepareBlock() {\n    if (cam.initialized == 1) {\n      if (block_no < design.blocks.length) {\n        trial_no = 0;\n\n        webgazer.resume();\n        if (design.recalibrate == 1 || block_no == 0) {\n          $(\"#instruction_message\").html(calibration.instruction).show();\n          setTimeout(\n            \"$('#instruction_message').fadeOut(1000);\",\n            calibration.instruction_duration\n          );\n          setTimeout(\n            \"startCalibration();\",\n            design.blocks[block_no].instruction_duration + 2000\n          );\n        } else {\n          $(\"#instruction_message\")\n            .html(design.blocks[block_no].instruction)\n            .show();\n          setTimeout(\n            \"$('#instruction_message').fadeOut(1000);\",\n            design.blocks[block_no].instruction_duration\n          );\n          setTimeout(\n            \"preparePhase();\",\n            design.blocks[block_no].instruction_duration + 2000\n          );\n        }\n      } else {\n        endExperiment();\n      }\n    } else {\n      setTimeout(\"prepareBlock();\", 500);\n    }\n  }\n\n  /************************************\n   * CALIBRATE\n   ************************************/\n  function startCalibration() {\n    if (\n      calibration_skip == \"skip\" ||\n      calibration_skip == \"on\" ||\n      calibration_skip == \"yes\" ||\n      calibration_skip == \"true\"\n    ) {\n      endValidation();\n    } else {\n      $(\".stimuli\").hide();\n      $(\"#calibration_dot\").hide();\n      if (block_no == 0) {\n        $(\"#calibration_dot\").click(function () {\n          calibrateHit();\n        });\n      }\n      calibration_no = 0;\n      //webgazer.clearData();\n      window.localStorage.clear();\n      //webgazer.begin();\n      t_calibration_start = new Date().getTime();\n      calibrate();\n    }\n  }\n\n  var gaze_phase = \"unknown\";\n\n  function calibrate() {\n    gaze_phase = \"calibrate\";\n    clearTimeout(t);\n    if (calibration_no < calibration.calibrations) {\n      $(\"#calibration_cnt\").html(calibration.duration);\n      $c = $(\"#calibration_dot\");\n      //var c = Math.floor(Math.random() * calibration.points.length);\n      //var p = calibration.points.splice(c, 1)[0];\n      if (calibration.points.length == 0) {\n        /*\n         * allocate calibration by pixels rather than percentages\n         */\n\n        var min_width = \"{{min_width}}\".replace(\"px\", \"\"); // e.g. 1000px in Borcsok et al., (2020)\n        var min_height = \"{{min_height}}\".replace(\"px\", \"\"); // e.g. 400px  in Borcsok et al., (2020)\n        var mid_screen_x = window.innerWidth / 2;\n        var mid_screen_y = window.innerHeight / 2;\n\n        calibration.points = shuffle([\n          {\n            position: \"middle\",\n            x: mid_screen_x,\n            y: mid_screen_y,\n          },\n          {\n            position: \"top\",\n            x: mid_screen_x,\n            y: mid_screen_y - (min_height / 2) * 0.9,\n          },\n          {\n            position: \"bottom\",\n            x: mid_screen_x,\n            y: mid_screen_y + (min_height / 2) * 0.9,\n          },\n          {\n            position: \"left\",\n            x: mid_screen_x - (min_width / 2) * 0.9,\n            y: mid_screen_y,\n          },\n          {\n            position: \"right\",\n            x: mid_screen_x + (min_width / 2) * 0.9,\n            y: mid_screen_y,\n          },\n          {\n            position: \"outer-top-left\",\n            x: mid_screen_x - (min_width / 2) * 0.9,\n            y: mid_screen_y - (min_height / 2) * 0.9,\n          },\n          {\n            position: \"outer-top-right\",\n            x: mid_screen_x + (min_width / 2) * 0.9,\n            y: mid_screen_y - (min_height / 2) * 0.9,\n          },\n          {\n            position: \"outer-bottom-left\",\n            x: mid_screen_x - (min_width / 2) * 0.9,\n            y: mid_screen_y + (min_height / 2) * 0.9,\n          },\n          {\n            position: \"outer-bottom-right\",\n            x: mid_screen_x + (min_width / 2) * 0.9,\n            y: mid_screen_y + (min_height / 2) * 0.9,\n          },\n          {\n            position: \"inner-top-left\",\n            x: mid_screen_x - (min_width / 2) * 0.45,\n            y: mid_screen_y - (min_height / 2) * 0.45,\n          },\n          {\n            position: \"inner-top-right\",\n            x: mid_screen_x + (min_width / 2) * 0.45,\n            y: mid_screen_y - (min_height / 2) * 0.45,\n          },\n          {\n            position: \"inner-bottom-left\",\n            x: mid_screen_x - (min_width / 2) * 0.45,\n            y: mid_screen_y + (min_height / 2) * 0.45,\n          },\n          {\n            position: \"inner-bottom-right\",\n            x: mid_screen_x + (min_width / 2) * 0.45,\n            y: mid_screen_y + (min_height / 2) * 0.45,\n          },\n        ]);\n\n        /*\n      the original code focusing on percentages\n\n      calibration.points = shuffle([\n          {x: \"20%\", y: \"20%\"},\n          {x: \"50%\", y: \"20%\"},\n          {x: \"80%\", y: \"20%\"},\n          {x: \"20%\", y: \"50%\"},\n          {x: \"50%\", y: \"50%\"},\n          {x: \"80%\", y: \"50%\"},\n          {x: \"20%\", y: \"80%\"},\n          {x: \"50%\", y: \"80%\"},\n          {x: \"80%\", y: \"80%\"},\n          {x: \"35%\", y: \"35%\"},\n          {x: \"65%\", y: \"35%\"},\n          {x: \"35%\", y: \"65%\"},\n          {x: \"65%\", y: \"65%\"}\n      ]);\n      */\n      }\n      var p = calibration.points.pop();\n      $c.css({\n        left: p.x,\n        top: p.y,\n      });\n\n      data_current = {\n        type: \"calibration\",\n        block: block_no,\n        trial: calibration_no,\n        x: p.x,\n        y: p.y,\n        raw: [],\n      };\n\n      cam.calibrating = 1;\n      $c.show();\n      if (calibration.method == \"watch\") {\n        t = setTimeout(\"autoCalibration();\", 750);\n      }\n    } else {\n      endCalibration();\n    }\n  }\n\n  function calibrateHit() {\n    var c = $(\"#calibration_cnt\").html();\n    /*\n  if ($('#webgazerVideoFeed').css('display') == 'block') {\n      $('#webgazerVideoFeed').css({\n          top: cam.topDist,\n          left: cam.leftDist,\n          display: 'none',\n          transform: '0'\n      });\n  }*/\n    if (c > 1 && cam.calibrating == 1) {\n      $(\"#calibration_cnt\").html(--c);\n      if (calibration.method == \"watch\") {\n        t = setTimeout(\"autoCalibration();\", 100);\n        //requestAnimationFrame(autoCalibration);\n      }\n    } else {\n      $(\"#calibration_cnt\").html(9999);\n      clearTimeout(t);\n      cam.calibrating = 0;\n      $(\"#calibration_dot\").hide();\n      calibration_no++;\n      saveData();\n      calibrate();\n    }\n    return false;\n  }\n\n  var t;\n  function autoCalibration() {\n    calibrateLog();\n    if (cam.calibrating == 1) {\n      calibrateHit();\n    }\n  }\n\n  function calibrateLog() {\n    var $cd = $(\"#calibration_dot\");\n    var cx = parseInt(Math.round($cd.offset().left));\n    var cy = parseInt(Math.round($cd.offset().top));\n    webgazer.watchListener(cx, cy);\n  }\n\n  function endCalibration() {\n    clearTimeout(t);\n    $(\"#calibration_dot\").unbind(\"click\");\n    startValidation();\n  }\n\n  /************************************\n   * VALIDATE\n   ************************************/\n  function startValidation() {\n    validation_no = 0;\n    validate();\n  }\n\n  function validate() {\n    gaze_phase = \"validate\";\n    clearTimeout(t);\n    if (validation_no < validation.validations) {\n      // if we there are validations left\n      $(\"#calibration_cnt\").html(0);\n      var $c = $(\"#calibration_dot\");\n\n      if (validation.points.length == 0) {\n        /*\n         * allocate positions by pixels rather than percentages\n         */\n\n        var min_width = \"{{min_width}}\".replace(\"px\", \"\"); // e.g. 1000px in Borcsok et al., (2020)\n        var min_height = \"{{min_height}}\".replace(\"px\", \"\"); // e.g. 400px  in Borcsok et al., (2020)\n        var mid_screen_x = window.innerWidth / 2;\n        var mid_screen_y = window.innerHeight / 2;\n\n        validation.points = shuffle([\n          {\n            position: \"top-left\",\n            x: mid_screen_x - (min_width / 2) * 0.9,\n            y: mid_screen_y - (min_height / 2) * 0.9,\n          },\n          {\n            position: \"top-right\",\n            x: mid_screen_x + (min_width / 2) * 0.9,\n            y: mid_screen_y - (min_height / 2) * 0.9,\n          },\n          {\n            position: \"middle\",\n            x: mid_screen_x,\n            y: mid_screen_y,\n          },\n          {\n            position: \"bottom-left\",\n            x: mid_screen_x - (min_width / 2) * 0.9,\n            y: mid_screen_y + (min_height / 2) * 0.9,\n          },\n          {\n            position: \"bottom-right\",\n            x: mid_screen_x + (min_width / 2) * 0.9,\n            y: mid_screen_y + (min_height / 2) * 0.9,\n          },\n        ]);\n\n        /*\n      original validation positions\n\n      validation.points = shuffle([\n          {x: \"20%\", y: \"20%\"},\n          {x: \"80%\", y: \"20%\"},\n          {x: \"50%\", y: \"50%\"},\n          {x: \"20%\", y: \"80%\"},\n          {x: \"80%\", y: \"80%\"}\n                                    ]);\n      */\n      }\n      var vp = validation.points.pop();\n      $c.css({\n        left: vp.x,\n        top: vp.y,\n      });\n      $c.show();\n      validation_current.x = Math.round($c.offset().left);\n      validation_current.y = Math.round($c.offset().top);\n\n      data_current = {\n        type: \"validation\",\n        block: block_no,\n        trial: validation_no,\n        x: validation_current.x,\n        y: validation_current.y,\n        raw: [],\n      };\n      cam.validating = 1;\n      t = setTimeout(\"validateFail();\", validation.timeout);\n      //t = setTimeout('validation = 0;', 3000);\n    } else {\n      endValidation();\n    }\n  }\n\n  function validateFail() {\n    data_current.type = \"validationfail\";\n    data_current.attempt = validation_attempt;\n    saveData();\n\n    cam.validating = 0;\n    webgazer.pause();\n\n    $(\".stimuli\").hide();\n    if (validation_attempt >= validation.attempts) {\n      $(\"#message\")\n        .html(\n          'Unforuntately, the calibration failed too many times. Therefore, you can not participate in this study. Please contact <a href=\"mailto:kilian.semmelmann@rub.de\">kilian.semmelmann@rub.de</a> if you have any questions. Thanks for your interest.'\n        )\n        .show();\n    } else {\n      validation_attempt++;\n      $(\"#message\")\n        .html(\n          \"The calibration failed. <br />Please follow the instructions and try again (try \" +\n            validation_attempt +\n            \" of \" +\n            validation.attempts +\n            \").\"\n        )\n        .show()\n        .delay(5000)\n        .fadeOut(1000);\n      $(\"#instruction\").show();\n    }\n    // TOOD: log validation-fail\n  }\n\n  function endValidation() {\n    cam.validating = 0;\n    validation_attempt = 1;\n    webgazer.pause();\n    $(\"#instruction_message\").html(design.blocks[block_no].instruction).show();\n    setTimeout(\n      \"$('#instruction_message').fadeOut(1000);\",\n      design.blocks[block_no].instruction_duration\n    );\n    setTimeout(\n      \"preparePhase();\",\n      design.blocks[block_no].instruction_duration + 2000\n    );\n  }\n\n  /************************************\n   * START EXPERIMENT\n   ************************************/\n  var t_trial_start;\n  function preparePhase() {\n    status = \"prepare\";\n    $(\".stimuli\").hide();\n    data_current = {\n      type: \"trial\",\n      block: block_no,\n      trial: trial_no,\n      raw: [],\n    };\n    webgazer.resume();\n    startPhase();\n  }\n\n  function startPhase() {\n    t_trial_start = new Date().getTime();\n    $(\"#stimuli_fixation\").show();\n    status = \"fixation_onset\";\n    // use start function of block-type name\n    var fn = design.blocks[block_no].type + \"Start\";\n    window[fn]();\n  }\n\n  var heat;\n  function endPhase() {\n    clearTimeout(t);\n    cam.recording = 0;\n    webgazer.pause();\n    status = \"end\";\n    $(\".stimuli\").hide();\n    trial_no++;\n    saveData();\n\n    if (trial_no < design.blocks[block_no].trials) {\n      setTimeout(\"preparePhase();\", design.blocks[block_no].iti);\n    } else {\n      block_no++;\n      if (block_no < design.blocks.length) {\n        window.localStorage.clear();\n        webgazer.clearData();\n        //loadWebgazer();\n        //prepareBlock();\n        navigation(\"pause\");\n      } else {\n        endExperiment();\n      }\n    }\n  }\n\n  function saveData() {\n    /*\n     * did the participant pass validation?\n     */\n    //data_current\n\n    /*\n     * change file name depending on whether it's calibration, validation or main trial?\n     * add calibration / validation / freeview number\n     */\n\n    var sub_trial_no = -1;\n    switch (gaze_phase) {\n      case \"calibration\":\n        sub_trial_no = calibration_no;\n        break;\n      case \"validate\":\n        sub_trial_no = validation_no;\n\n        /*\n         * did the participant pass? (assuming this is validation)\n         */\n        var valid_rows = 0;\n\n        data_current.raw.forEach(function (row) {\n          valid_rows += row.valid;\n        });\n\n        break;\n      case \"freeview\":\n        sub_trial_no = freeview_no;\n        break;\n    }\n\n    data_current.raw = data_current.raw.map(function (row) {\n      row.x = row.x - window.innerWidth / 2;\n      row.y = row.y - window.innerHeight / 2;\n\n      if (typeof image_pair !== \"undefined\") {\n        Object.keys(image_pair).forEach(function (key) {\n          row[key] = image_pair[key];\n        });\n      }\n      row.screen_width = screen.width;\n      row.screen_height = screen.height;\n      row.window_width = window.innerWidth;\n      row.window_height = window.innerHeight;\n      row.trial_no = sub_trial_no;\n\n      if (valid_rows > 19) {\n        row.valid_trial = true;\n      } else {\n        row.valid_trial = false;\n      }\n\n      /*\n\n    did the participant pass? (assuming this is validation)\n\n    */\n\n      //row.left_image  = image_pair.image_1;\n      //row.right_image = image_pair.image_2;\n\n      return row;\n    });\n\n    data.push(data_current);\n    data_current = {};\n    sendData();\n  }\n\n  function sendData() {\n    var sub_trial_no = -1;\n    switch (gaze_phase) {\n      case \"calibration\":\n        sub_trial_no = calibration_no;\n        break;\n      case \"validate\":\n        sub_trial_no = validation_no;\n        break;\n      case \"freeview\":\n        sub_trial_no = freeview_no;\n        break;\n    }\n\n    switch (parent.parent.Study.get_vars.platform) {\n      case \"preview\":\n        //do nothing\n        break;\n      case \"localhost\":\n        console.dir(\"data\");\n        console.dir(data);\n        data.forEach(function (trial, trial_no) {\n          if (trial !== null) {\n            parent.parent.Collector.electron.fs.write_data(\n              parent.parent.Study.get_vars.location,\n              parent.parent.$(\"#participant_code\").val() +\n                \"-\" +\n                gaze_phase +\n                \"-\" +\n                trial_no +\n                \"-\" +\n                sub_trial_no +\n                \".csv\",\n              Papa.unparse(data[trial_no].raw)\n            );\n\n            /*\n\n                                      error above\n\n                                      */\n\n            parent.parent.online_save(\n              parent.parent.Study.get_vars.location,\n              parent.parent.$(\"#participant_code\").val() +\n                gaze_phase +\n                \"-\" +\n                trial_no +\n                \"-\" +\n                sub_trial_no,\n              \"-trial-\" + parent.parent.project_json.trial_no + \"-\" + trial_no,\n              parent.parent.$(\"#completion_code\").val(),\n              parent.parent.$(\"#prehashed_code\").val(),\n              Papa.unparse(data[trial_no].raw), //the data\n              save_script.split(\"|\"),\n              function () {\n                parent.parent.online_data_obj.saves_ended++;\n              }\n            );\n            data[trial_no] = null;\n          }\n        });\n        break;\n      default:\n        data.forEach(function (trial, trial_no) {\n          if (trial !== null) {\n            parent.parent.online_save(\n              parent.parent.Study.get_vars.location,\n              parent.parent.$(\"#participant_code\").val() +\n                \"-\" +\n                gaze_phase +\n                \"-trial-\" +\n                parent.parent.project_json.trial_no +\n                \"-\" +\n                trial_no +\n                \"-\" +\n                sub_trial_no,\n              parent.parent.$(\"#completion_code\").val(),\n              parent.parent.$(\"#prehashed_code\").val(),\n              Papa.unparse(data[trial_no].raw), //the data\n              save_script.split(\"|\"),\n              function () {\n                parent.parent.online_data_obj.saves_ended++;\n              }\n            );\n            data[trial_no] = null;\n          }\n        });\n\n        break;\n    }\n  }\n\n  function endExperiment() {\n    Phase.submit();\n  }\n\n  /************************************\n   * SIMPLE DOT VIEWING PARADIGM\n   * If you want to introduce your own paradigms, follow the same structure and extend the design array above.\n   ************************************/\n  var tSimple = {};\n  tSimple.positions = [];\n  function simpleStart() {\n    // if we don't have dot-positions any more, refill the array\n    if (tSimple.positions.length == 0) {\n      tSimple.positions = shuffle([\n        { x: \"20%\", y: \"20%\" },\n        { x: \"50%\", y: \"20%\" },\n        { x: \"80%\", y: \"20%\" },\n        { x: \"20%\", y: \"50%\" },\n        { x: \"80%\", y: \"50%\" },\n        { x: \"20%\", y: \"80%\" },\n        { x: \"50%\", y: \"80%\" },\n        { x: \"80%\", y: \"80%\" },\n      ]);\n    }\n    var pos = tSimple.positions.pop();\n    $(\"#stimuli_dot\").css({\n      top: pos.y,\n      left: pos.x,\n    });\n    data_current.task = \"simple\";\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = \"dot_\" + pos.x + \"_\" + pos.y;\n\n    cam.recording = 1;\n    setTimeout(\n      '$(\"#stimuli_fixation\").hide(); status = \"fixation_offset\";',\n      1500\n    );\n    setTimeout(\"simpleShowdot();\", 2000);\n  }\n\n  function simpleShowdot() {\n    status = \"stimulus_onset\";\n    $(\"#stimuli_dot\").show();\n    setTimeout('status = \"stimulus_offset\"; endPhase();', 2000);\n  }\n\n  /************************************\n   * POSNER VIEWING PARADIGM\n   ************************************/\n  function posnerStart() {\n    var p = Math.random() >= 0.5 ? \"&gt;&gt;&gt;\" : \"&lt;&lt;&lt;\";\n    $(\"#stimuli_prime\").html(p);\n\n    var t = Math.random() >= 0.5 ? \"X\" : \"N\";\n    $(\"#stimuli_target\").html(t);\n\n    var cond = Math.random() >= 0.7 ? \"incongruent\" : \"congruent\";\n\n    var tpos = \"left\";\n    if (\n      (cond == \"incongruent\" && p == \"&lt;&lt;&lt;\") ||\n      (cond == \"congruent\" && p == \"&gt;&gt;&gt;\")\n    ) {\n      tpos = \"right\";\n    }\n\n    var pos = {};\n    if (tpos == \"left\") {\n      pos.x = \"20%\";\n      pos.y = \"30%\";\n    } else {\n      pos.x = \"80%\";\n      pos.y = \"30%\";\n    }\n\n    $(\"#stimuli_target\").css({\n      top: pos.x,\n      left: pos.y,\n    });\n\n    data_current.task = \"posner\";\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = \"posner_\" + pos.x + \"_\" + pos.y + \"_\" + tpos;\n\n    cam.recording = 1;\n    setTimeout(\"$('#stimuli_fixation').hide();\", 1000);\n    setTimeout(\"posnerShowprime();\", 1500);\n  }\n\n  function posnerShowprime() {\n    $(\"#stimuli_prime\").show();\n    setTimeout(\"posnerShowTarget();\", 300);\n  }\n\n  function posnerShowTarget() {\n    $(\"#stimuli_prime\").hide();\n    $(\"#stimuli_target\").show();\n    setTimeout(\"endPhase();\", 1500);\n  }\n\n  /************************************\n   * SMOOTH PURSUIT PARADIGM\n   ************************************/\n  var tPursuit = {};\n  function pursuitStart() {\n    $(\"#stimuli_fixation\").hide();\n    var pos_possible = shuffle([\n      { x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"20%\" },\n      { x: \"20%\", y: \"20%\", tx: \"20%\", ty: \"80%\" },\n      { x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"80%\" },\n\n      { x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"20%\" },\n      { x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"80%\" },\n      { x: \"80%\", y: \"20%\", tx: \"80%\", ty: \"80%\" },\n\n      { x: \"20%\", y: \"80%\", tx: \"20%\", ty: \"20%\" },\n      { x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"20%\" },\n      { x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"80%\" },\n\n      { x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"20%\" },\n      { x: \"80%\", y: \"80%\", tx: \"80%\", ty: \"20%\" },\n      { x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"80%\" },\n    ]);\n    var pos = pos_possible[0];\n    $s = $(\"#stimuli_dot\");\n    $s.css({\n      top: pos.y,\n      left: pos.x,\n    });\n\n    $s.css({\n      \"background-color\": \"#000\",\n    });\n\n    data_current.task = \"pursuit\";\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition =\n      \"pursuit_\" + pos.x + \"_\" + pos.y + \"_\" + pos.tx + \"_\" + pos.ty;\n\n    cam.recording = 1;\n    $s.show();\n    setTimeout(function () {\n      status = \"pursuit_start\";\n      $(\"#stimuli_dot\")\n        .css({\n          \"background-color\": \"#dd494b\",\n        })\n        .animate({ left: pos.tx, top: pos.ty }, 2000, \"linear\", function () {\n          status = \"pursuit_end\";\n          setTimeout(\"endPhase();\", 500);\n        });\n    }, 1500);\n  }\n\n  /************************************\n   * FREE VIEWING PARADIGM\n   ************************************/\n  var tFreeview = {};\n\n  tFreeview.stimuli = [];\n\n  function process_freeview_image_file() {\n    console.dir(\"tFreeview\");\n    console.dir(tFreeview);\n    if (trial_order == \"random\") {\n      tFreeview.stimuli = shuffle(tFreeview.stimuli);\n    }\n\n    if (left_side == \"random\") {\n      for (var i = 0; i < tFreeview.stimuli.length; i++) {\n        [left_image, right_image] = shuffle([\n          tFreeview.stimuli[i].image_1,\n          tFreeview.stimuli[i].image_2,\n        ]);\n        tFreeview.stimuli[i].image_1 = left_image;\n        tFreeview.stimuli[i].image_2 = right_image;\n      }\n    } else if ((left_side == \"equal\") | (left_side == \"counterbalance\")) {\n      // select indexes to swap left and right for half the indexes\n      // all indexes:\n      var indexes = Array.from(\n        { length: tFreeview.stimuli.length },\n        (v, k) => k\n      );\n      indexes = shuffle(indexes);\n\n      //assign the first half left to right\n      for (var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++) {\n        //this will only loop through half of the randomised indexes\n        var this_index = indexes[i];\n        var right_image = tFreeview.stimuli[this_index].image_1;\n        var left_image = tFreeview.stimuli[this_index].image_2;\n        tFreeview.stimuli[this_index].image_1 = left_image;\n        tFreeview.stimuli[this_index].image_2 = right_image;\n      }\n    } else if (left_side == \"image_1\") {\n      // do nothing\n    } else if (left_side == \"image_2\") {\n      for (var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++) {\n        var right_image = tFreeview.stimuli[i].image_1;\n        var left_image = tFreeview.stimuli[i].image_2;\n        tFreeview.stimuli[i].image_1 = left_image;\n        tFreeview.stimuli[i].image_2 = right_image;\n      }\n    } else {\n      alert(\n        \"there's a problem in the 'left_side' column - fix this before testing.\"\n      );\n    }\n  }\n\n  //check if the freeview file matches one of the stimuli files\n  if (\n    typeof parent.parent.project_json.all_stims[freeview_image_file] !==\n    \"undefined\"\n  ) {\n    var freeview_contents =\n      parent.parent.project_json.all_stims[freeview_image_file];\n    var freeview_clean = freeview_contents.map(function (row) {\n      return row.filter((item) => item !== null);\n    });\n    tFreeview.stimuli = Papa.parse(Papa.unparse(freeview_clean), {\n      header: true,\n      skipEmptyLines: true,\n    }).data;\n    process_freeview_image_file();\n  } else {\n    if (freeview_image_file.toLowerCase().indexOf(\"https://\") == -1) {\n      freeview_image_file = \"../User/\" + freeview_image_file;\n    }\n    $.get(freeview_image_file, function (result) {\n      tFreeview.stimuli = Papa.parse(result, {\n        header: true,\n        skipEmptyLines: true,\n      }).data;\n      process_freeview_image_file();\n    });\n  }\n\n  images_loaded = 0;\n\n  function freeviewStart() {\n    gaze_phase = \"freeview\";\n    function freeview_loaded(left_image, right_image) {\n      freeview_no++;\n      data_current.task = \"freeviewing\";\n      data_current.x = $(\"#stimuli_img_left\").css(\"left\");\n      data_current.y = \"0%\";\n      data_current.condition = \"view_\" + left_image + \"_\" + right_image;\n\n      cam.recording = 1;\n      setTimeout(function () {\n        status = \"fixation_flash\";\n        $(\"#stimuli_fixation\").css(\"color\", \"red\");\n      }, 1000);\n      setTimeout(function () {\n        $(\"#stimuli_fixation\").css(\"color\", \"black\");\n      }, 1250);\n      setTimeout(function () {\n        $(\"#stimuli_fixation\").css(\"color\", \"red\");\n      }, 1500);\n      setTimeout(function () {\n        $(\"#stimuli_fixation\").css(\"color\", \"black\");\n      }, 1750);\n      setTimeout(function () {\n        $(\"#stimuli_fixation\").hide();\n        status = \"fixation_offset\";\n      }, 2000);\n      setTimeout(function () {\n        all_fixation_rts.push();\n        freeviewShow();\n      }, 2500);\n    }\n\n    document.body.style.cursor = \"none\";\n\n    image_pair = tFreeview.stimuli.shift();\n\n    [left_image, right_image] = [image_pair.image_1, image_pair.image_2];\n\n    /*\n     * Some code to make this work on installed version of Collector\n     */\n    switch (parent.parent.Study.get_vars.platform) {\n      case \"preview\":\n      case \"localhost\":\n        left_image = \"../../\" + left_image;\n        right_image = \"../../\" + right_image;\n        break;\n    }\n\n    var baseline_time = new Date().getTime();\n\n    // Make sure the images are loaded before going past fixation\n    /////////////////////////////////////////////////////////////\n\n    $(\"#stimuli_img_left\").off(\"load\");\n    $(\"#stimuli_img_right\").off(\"load\");\n    $(\"#stimuli_img_left\").attr(\"src\", left_image);\n    $(\"#stimuli_img_right\").attr(\"src\", right_image);\n\n    images_loaded = 0;\n\n    $(\"#stimuli_img_left\").on(\"load\", function () {\n      images_loaded = images_loaded + 1;\n      if (images_loaded == 2) {\n        freeview_loaded(left_image, right_image);\n      }\n    });\n\n    $(\"#stimuli_img_right\").on(\"load\", function () {\n      images_loaded = images_loaded + 1;\n      if (images_loaded == 2) {\n        freeview_loaded(left_image, right_image);\n      }\n    });\n  }\n\n  function freeviewShow() {\n    status = \"stimulus_onset\";\n    $(\"#stimuli_img_left\").show();\n    $(\"#stimuli_img_right\").show();\n    setTimeout(\"status = 'stimulus_offset'; endPhase();\", stim_duration);\n  }\n\n  /************************************\n   * GENERATE AND SHOW HEATMAP\n   ************************************/\n  function heatmap() {\n    // preprocess data for heatmap\n    var bins = []; // create bins and fill them\n    for (var y = 0; y < window.innerHeight; y++) {\n      for (var x = 0; x < window.innerWidth; x++) {\n        bins.push([x, y, 0]);\n      }\n    }\n    // sort fixations into bins and get max\n    var max = 0;\n    for (var i = 0; i < data[data.length - 1].raw.length; i++) {\n      var d = data[data.length - 1].raw[i];\n      var dx = Math.round(d.x);\n      var dy = Math.round(d.y);\n      var pos = dy * window.innerWidth + dx;\n      if (pos <= bins.length && pos >= 0) {\n        bins[pos][2] += 1;\n        if (bins[pos][2] > max) {\n          max = bins[pos][2];\n        }\n      } else {\n        console.log(\"dropped \" + pos);\n      }\n    }\n\n    // remove empty bins\n    var binsc = [];\n    for (var i = 0; i < bins.length; i++) {\n      if (bins[i][2] != 0) {\n        binsc.push(bins[i]);\n      }\n    }\n\n    // create heatmap\n    $(\"body\").append('<canvas id=\"heatmap\"></canvas>');\n    $(\"#heatmap\").attr(\"width\", window.innerWidth);\n    $(\"#heatmap\").attr(\"height\", window.innerHeight);\n    heat = simpleheat(\"heatmap\");\n    heat.resize();\n    heat.radius(30, 50);\n    heat.max(max).data(binsc).draw();\n\n    $(\"#stimuli_img\").show();\n  }\n\n  /**\n   * navigation\n   */\n  var page = 1;\n  var oldpage = -1;\n  var d_consent = undefined;\n  function navigation(direction) {\n    $(\"#message\").hide();\n\n    $(\"#instruction_continue_text\").html(\"&gt;\");\n\n    if (page == 2 && direction == \"continue\") {\n      if (cam.initialized == 1) {\n        $(\"#instruction\").fadeOut(1000);\n        setTimeout(\"prepareBlock();\", 2000);\n      }\n    } else if (page == 2 && direction == \"pause\") {\n      $(\"#instruction_continue\").html(\"continue\").css({ \"font-size\": \"1.7em\" });\n      $(\"#instruction_2\")\n        .find(\"h1\")\n        .html(\n          \"short pause (block \" + block_no + \" of \" + design.blocks.length + \")\"\n        );\n      $(\"#setup_first\").hide();\n      $(\"#setup_after\").show();\n\n      $(\"#instruction\").show(function () {\n        if (block_no == design.blocks.length) {\n          page++;\n        } else {\n          $(\"#instruction_2\").fadeIn(300);\n          $(\"#webgazerVideoFeed\").show();\n        }\n      });\n    } else if (direction == \"continue\") {\n      page++;\n    } else if (direction == \"back\") {\n      page--;\n    }\n    page = page < 1 ? 1 : page;\n    page =\n      page > $(\".instruction_page\").length\n        ? $(\".instruction_page\").length\n        : page;\n    page <= 1 ? $(\"#instruction_back\").hide() : $(\"#instruction_back\").show();\n    page >= $(\".instruction_page\").length\n      ? $(\"#instruction_continue\").hide()\n      : $(\"#instruction_continue\").show();\n    page >= 3 ? $(\"#instruction_back,#instruction_continue\").hide() : \"\";\n    block_no > 0 ? $(\"#instruction_back\").hide() : \"\";\n\n    if (oldpage != page) {\n      // if we stay at the same page, we avoid unnecessary animations\n      $(\".instruction_page\").hide();\n      $(\"#instruction_\" + page).fadeIn(300);\n    }\n    // start up webcam\n    if (page == 2 && cam.initialized == 0) {\n      $(\"#instruction_continue\").hide();\n      loadWebgazer();\n    }\n    oldpage = page;\n  }\n\n  var cl;\n  var t_start = new Date().getTime();\n  $(\"document\").ready(function () {\n    $(\"#stimulus\").hide();\n    $(\"#calibration_dot\").hide();\n    $(\"#setup_after\").hide();\n    $(\"#instruction_message\").hide();\n    $(\"#therest\").hide();\n\n    $(\"#start_button\").click(function () {\n      $(this).hide();\n      prepareBlock();\n    });\n\n    $(\"body\").keypress(function (e) {\n      //e.preventDefault();\n      switch (e.keyCode) {\n      }\n    });\n\n    $(\"#instruction_continue\").click(function () {\n      navigation(\"continue\");\n    });\n\n    $(\"#instruction_back\").click(function () {\n      navigation(\"back\");\n    });\n\n    $(\"#f_crowdflowerid\").tooltip({\n      show: {\n        effect: \"slideDown\",\n        delay: 250,\n      },\n    });\n\n    /*\n  $('#f_birthday').datepicker({\n      dateFormat: 'yy/mm/dd',\n      changeYear: true,\n      changeMonth: true,\n      yearRange: \"-100:+0\"\n  });\n  */\n    var select = $(\"#f_birthday\");\n    for (var i = 18; i <= 100; i++) {\n      select.append('<option value=\"' + i + '\">' + i + \"</option>\");\n    }\n\n    window.localStorage.clear();\n\n    var ss = window.location.hash.substring(1);\n    $(\"#cf_reference,#asd_reference,#rub_reference,#cf_code\").hide();\n    if (ss == \"cf\") {\n      // crowdflower-reference\n      $(\"#cf_reference,#cf_code\").show();\n    } else if (ss == \"rub\") {\n      $(\"#rub_reference\").show();\n    } else {\n      $(\"#asd_reference\").show();\n    }\n\n    var is_chrome = navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1;\n    var is_firefox = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1;\n    if (is_chrome || is_firefox) {\n      page = 0;\n      navigation(\"start\");\n    } else {\n      $(\"#instruction\").hide();\n      $(\"#message\")\n        .html(\n          'Thank you very much for your interest in our study.<br /><br />Unfortunately, your browser is not supported by our website. To participate, you need either the browser \"Google Chrome\" or \"Firefox\".<br /><br />Do download one of these securely and free of charge, please follow one of these links: <a href=\"https://www.google.com/chrome/browser/desktop/\" target=\"_blank\">Google Chrome</a> or <a href=\"https://www.mozilla.org/de/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>'\n        )\n        .show();\n    }\n  });\n\n  /*\n\n function drawLoop() {\n    requestAnimFrame(drawLoop);\n    var p = webgazer.getCurrentPrediction();\n    if (p !== null) {\n        console.log(p);\n        $('body').append('<span class=\"p\" style=\"top: '+p.y+'px; left: '+p.x+'px\"></span>');\n        measurements++;\n    }\n    t = (new Date().getTime() - start)/1000;\n    cam.overlay.getContext('2d').clearRect(0,0,cam.width,cam.height);\n    if (cl.getCurrentPosition()) {\n        //console.log(cl.getCurrentPosition()[0]);\n        //cl.draw(overlay);\n    }\n}\n */\n\n  window.onbeforeunload = function () {\n    //webgazer.end(); //Uncomment if you want to save the data even if you reload the page.\n  };\n</script>\n",
      "text": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-21) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n{{text}}\n",
      "survey": "<!--\n  Author: Dr. Anthony Haffey\n\n  Collector: Cat/Kitten/Cat release\n  A program for running experiments on the web\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\n\n  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\n\n  Kitten/Cat release (2019-2021) author: Dr. Anthony Haffey\n\n  (team@someopen.solutions)\n-->\n<style>\n  body {\n    background-color: #5f9ea0;\n    width: 100%;\n    height: 100%;\n  }\n  td {\n    padding: 10px;\n    vertical-align: top;\n  }\n\n  /*\n*\telements by id\n*/\n\n  #content {\n    width: 95%;\n  }\n  #proceed_button {\n    display: none;\n    float: right;\n  }\n  #survey_outline {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    height: 90%;\n    overflow: auto;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    background-color: white;\n    min-width: 900px;\n    max-width: 9000px;\n    border-radius: 20px;\n    border-color: #006688;\n    border-style: solid;\n    border-width: 5px;\n    padding: 10px;\n    box-shadow: 12px 12px 12px rgba(0, 0, 0, 0.5);\n  }\n  #survey_tabs {\n    padding: 20px;\n  }\n  #this_survey_id {\n    padding: 20px;\n    display: none;\n  }\n\n  /*\n*\telements by class\n*/\n  .feedback_span_multiple {\n    display: none;\n    margin: 10px;\n  }\n  .feedback_span_single {\n    display: none;\n    padding: 10px;\n  }\n  .likert_table td {\n    padding: 1px;\n    text-align: center;\n  }\n  .likert_table td:hover {\n    color: blue;\n  }\n  .score_total {\n    display: none;\n  }\n  .show_tab {\n    margin: 5px;\n  }\n  .survey_btn {\n    white-space: normal;\n    word-wrap: initial;\n  }\n  .table_break {\n    width: 100%;\n    height: 300px;\n    overflow: auto;\n  }\n\n  /*\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\n*/\n  ::-webkit-scrollbar {\n    width: 14px;\n    height: 18px;\n  }\n  ::-webkit-scrollbar-thumb {\n    height: 6px;\n    border: 4px solid rgba(0, 0, 0, 0);\n    background-clip: padding-box;\n    -webkit-border-radius: 7px;\n    background-color: rgba(0, 102, 153, 0.5);\n    -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05),\n      inset 1px 1px 0px rgba(0, 0, 0, 0.05);\n  }\n  ::-webkit-scrollbar-button {\n    width: 0;\n    height: 0;\n    display: none;\n  }\n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n</style>\n<div id=\"everything\">\n  <div id=\"survey_outline\"></div>\n</div>\n<span id=\"scales_span\"></span>\n<script>\n  /*\n   * Retrieving settings\n   */\n\n  if (typeof settings !== \"undefined\") {\n    settings = [settings];\n  } else {\n    settings = {};\n  }\n\n  /*\n   * vertical vs. horizontal tabs\n   */\n\n  if (\n    typeof settings.tab_hor_vert == \"undefined\" ||\n    settings.tab_hor_vert.toLowerCase() == \"horizontal\"\n  ) {\n    settings.tab_hor_vert = \"horizontal\";\n\n    $(\"#survey_outline\")\n      .append(\n        $(\"<div>\").attr(\"id\", \"please_wait_div\").html(\"Loading... Please wait\")\n      )\n      .append(\n        $(\"<div>\")\n          .addClass(\"needs-validation\")\n          .attr(\"id\", \"this_survey_id\")\n          .attr(\"novalidate\", true)\n      )\n      .append(\n        $(\"<div>\")\n          .attr(\"id\", \"survey_tabs\")\n          .addClass(\"border-top\")\n          .addClass(\"border-primary\")\n          .css(\"text-align\", \"right\")\n      )\n      .append(\n        $(\"<input>\")\n          .addClass(\"btn\")\n          .addClass(\"btn-primary\")\n          .attr(\"id\", \"proceed_button\")\n          .attr(\"type\", \"submit\")\n          .attr(\"value\", \"Proceed\")\n      );\n  } else if (settings.tab_hor_vert.toLowerCase() == \"vertical\") {\n    $(\"#survey_outline\").append(\n      $(\"<table>\").append(\n        $(\"<tr>\")\n          .append(\n            $(\"<td>\")\n              .prop(\"valign\", \"top\")\n              .addClass(\"border-right\")\n              .addClass(\"border-primary\")\n              .append($(\"<div>\").prop(\"id\", \"survey_tabs\"))\n          )\n          .append(\n            $(\"<td>\")\n              .append(\n                $(\"<div>\")\n                  .prop(\"id\", \"please_wait_div\")\n                  .html(\"Please wait while survey is downloading\")\n              )\n              .append(\n                $(\"<div>\")\n                  .prop(\"id\", \"this_survey_id\")\n                  .addClass(\"needs-validation\")\n                  .attr(\"novalidate\", true)\n              )\n              .append(\n                $(\"<input>\")\n                  .attr(\"type\", \"button\")\n                  .addclass(\"btn\")\n                  .addclass(\"btn-primary\")\n                  .prop(\"id\", \"proceed_button\")\n                  .val(\"Proceed\")\n              )\n          )\n      )\n    );\n  } else if (settings.tab_hor_vert.toLowerCase() == \"none\") {\n    $(\"#survey_outline\")\n      .append($(\"<div>\").css(\"display\", \"none\").prop(\"id\", \"survey_tabs\"))\n      .append(\n        $(\"<div>\")\n          .html(\"Please wait while survey is downloading\")\n          .prop(\"id\", \"please_wait_div\")\n      )\n      .append(\n        $(\"<div>\")\n          .class(\"needs-validation\")\n          .prop(\"id\", \"this_survey_id\")\n          .attr(\"novalidate\", true)\n      );\n  } else {\n    bootbox.alert(\n      \"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\"\n    );\n  }\n\n  /*\n   * Defining objects\n   */\n\n  page_break_management = {\n    breaks_remaining: 0,\n    breaks_index: 0,\n  };\n\n  proceed_object = {\n    type: [],\n    name: [],\n    break_no: [],\n  };\n\n  scoring_object = {\n    scales: [],\n    scale_scores: [],\n    update_scales: function (this_survey) {\n      headers = Object.keys(this_survey[0]);\n      this.scales = headers.filter((elm) => elm.includes(\"score:\"));\n      var scales_html = \"\";\n      this.scales.forEach(function (element) {\n        element = element.replace(\": \", \":\");\n        scales_html +=\n          \"<input name='\" +\n          element.replace(/ |:/g, \"_\") +\n          \"' class='score_total \" +\n          element.replace(/ |:/g, \"_\") +\n          \"' disabled>\";\n      });\n      $(\"#scales_span\").html(scales_html);\n    },\n  };\n\n  survey_obj = {};\n\n  /*\n   * Element actions\n   */\n\n  /*\n$(function() {\n  $( \".datepicker\" ).datepicker({\n    dateFormat : 'mm/dd/yy',\n    changeMonth : true,\n    changeYear : true,\n    yearRange: '-100y:c+nn',\n    maxDate: '-1d'\n  });\n});\n*/\n\n  $(\"#ExperimentContainer\").css(\"transform\", \"scale(1,1)\");\n\n  $(\"#proceed_button\").on(\"click\", function () {\n    var proceed = true;\n    var tabs = document.getElementsByClassName(\"show_tab active\");\n    if (tabs.length > 0) {\n      var current_tab = document\n        .getElementsByClassName(\"show_tab active\")[0]\n        .id.replace(\"_button\", \"\")\n        .replace(\"tab_\", \"\");\n      var response_elements = $(\"#table_\" + current_tab).find(\n        \".response_element\"\n      );\n    } else {\n      response_elements = $(\".table_break:visible\").find(\".response_element\");\n    }\n    for (var i = 0; i < response_elements.length; i++) {\n      [row_no, item_name] = retrieve_row_no_item_name(response_elements[i]);\n      if (typeof survey_obj.data[row_no].optional !== \"undefined\") {\n        var this_optional = survey_obj.data[row_no].optional.toLowerCase();\n\n        if (this_optional.indexOf(\"no\") !== -1) {\n          this_optional = this_optional.split(\"-\"); // find out whether there's a minimal number of responses\n          if (this_optional.length == 1) {\n            // default is that length needs to be at least 1\n            var min_resp_length = 1;\n          } else if (this_optional.length == 2) {\n            var min_resp_length = this_optional[1];\n          } else {\n            bootbox.alert(\n              \"Error - you appear to have too many '-' characters in the 'optional' column\"\n            );\n            return false;\n          }\n        } else {\n          min_resp_length = 0;\n        }\n\n        var quest_resp = isJSON($(\"#\" + response_elements[i].id).val());\n        if (quest_resp.length < min_resp_length) {\n          proceed = false;\n          $(\"#\" + response_elements[i].id.replace(\"response\", \"question\"))\n            .removeClass(\"text-dark\")\n            .removeClass(\"text-success\")\n            .addClass(\"text-danger\");\n        } else {\n          $(\"#\" + response_elements[i].id.replace(\"response\", \"question\"))\n            .removeClass(\"text-dark\")\n            .removeClass(\"text-danger\")\n            .addClass(\"text-success\");\n        }\n      }\n    }\n\n    if (current_tab == survey_obj.tabs && proceed) {\n      if (typeof sql_surveys == \"undefined\") {\n        var next_table_no =\n          parseFloat($(\".table_break:visible\")[0].id.replace(\"table\", \"\")) + 1;\n\n        if ($(\".table_break#table\" + next_table_no).length == 0) {\n          if (typeof Phase !== \"undefined\") {\n            Phase.submit();\n          } else {\n            bootbox.alert(\n              \"You've finished! Click on the preview button to restart.\"\n            );\n          }\n        } else {\n          $(\".table_break\").hide();\n          $(\".table_break#table\" + next_table_no).show();\n        }\n      } else {\n        $(\"#survey_outline\").append(\n          $(\"<h1>\").html(\"You have finished the preview of this survey.\")\n        );\n      }\n    } else if (current_tab < survey_obj.tabs && proceed) {\n      current_tab++;\n      $(\"#tab_\" + current_tab + \"_button\").removeClass(\"btn-secondary\");\n      $(\"#tab_\" + current_tab + \"_button\").removeClass(\"disabled\");\n      $(\"#tab_\" + current_tab + \"_button\").addClass(\"btn-outline-dark\");\n      $(\"#tab_\" + current_tab + \"_button\").click();\n    } else if (proceed == false) {\n      bootbox.alert(\n        \"You're missing some responses. Please fill in all the answers for the questions in red above.\"\n      );\n    } else if (current_tab > survey_obj.tabs) {\n      bootbox.alert(\n        \"Error - please contact Scientific Open Solutions about this problem, error 'Survey_001'.\"\n      );\n    }\n  });\n\n  //by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\n  String.prototype.replaceAll = function (str1, str2, ignore) {\n    return this.replace(\n      new RegExp(\n        str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"),\n        ignore ? \"gi\" : \"g\"\n      ),\n      typeof str2 == \"string\" ? str2.replace(/\\$/g, \"$$$$\") : str2\n    );\n  };\n\n  /*\n   * Functions\n   */\n\n  function clean_item(this_item) {\n    if ((this_item.indexOf(\"'\") !== -1) | (this_item.indexOf('\"') !== -1)) {\n      bootbox.alert(\n        \"Please avoid apostraphes or quote marks in the responses the participant can give. These cause problems with smooth running of surveys. This occurs when you wrote:<br><br>\" +\n          this_item\n      );\n    }\n    return this_item;\n  }\n\n  function generate_feedback_string(\n    feedback_array,\n    this_index,\n    feedback_color,\n    row\n  ) {\n    if (feedback_array) {\n      if (feedback_array.length > 1) {\n        return $(\"<div>\")\n          .addClass(\n            \"feedback_span_multiple\" +\n              row[\"item_name\"].toLowerCase() +\n              \"_feedback\"\n          )\n          .html(feedback_array[this_index])[0].outerHTML;\n      } else {\n        return $(\"<div>\")\n          .addClass(\n            \"feedback_span_single \" +\n              row[\"item_name\"].toLowerCase() +\n              \"_feedback\"\n          )\n          .css(\"color\", feedback_color[this_index])\n          .html(feedback_array[this_index])[0].outerHTML;\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  function get_feedback(row) {\n    if (typeof row[\"feedback\"] !== \"undefined\" && row[\"feedback\"] !== \"\") {\n      feedback_array = row[\"feedback\"].split(\"|\");\n      if (typeof row[\"feedback_color\"] == \"undefined\") {\n        bootbox.alert(\n          \"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\"\n        );\n      }\n      feedback_color = row[\"feedback_color\"].split(\"|\");\n    } else {\n      feedback_array = null;\n      feedback_color = \"\";\n    }\n    return [feedback_array, feedback_color];\n  }\n\n  function isJSON(str) {\n    try {\n      return JSON.parse(str);\n    } catch (e) {\n      return str;\n    }\n  }\n\n  function likert_update(this_element) {\n    [row_no, item_name] = retrieve_row_no_item_name(this_element);\n    $(\".row_\" + row_no)\n      .removeClass(\"active\")\n      .removeClass(\"btn-primary\")\n      .addClass(\"btn-outline-primary\");\n    $(this_element).removeClass(\"btn-outline-primary\").addClass(\"btn-primary\");\n    $(\"#survey_\" + item_name + \"_response\").val(this_element.innerHTML);\n    $(\"#survey_\" + item_name + \"_value\").val(this_element.value);\n\n    response_check(this_element);\n  }\n\n  function load_survey(survey) {\n    /*\n     * are we in preview?\n     */\n    if (typeof parent.collector_survey_preview !== \"undefined\") {\n      survey_content = survey;\n    } else if (\n      typeof parent.master !== \"undefined\" &&\n      parent.master.surveys.preview\n    ) {\n      survey_content = survey;\n      survey_obj.mods = parent.master.mods;\n    } else {\n      survey = survey.toLowerCase().replace(\".csv\", \"\") + \".csv\";\n\n      if (\n        typeof parent.parent.project_json.surveys !== \"undefined\" &&\n        typeof parent.parent.project_json.surveys[survey] !== \"undefined\"\n      ) {\n        survey_content = parent.parent.project_json.surveys[survey];\n        survey_obj.mods = parent.parent.project_json.mods;\n      } else if (\n        typeof parent.parent.project_json.surveys !== \"undefined\" &&\n        typeof parent.parent.project_json.surveys[survey.replace(\".csv\", \"\")]\n      ) {\n        survey_content =\n          parent.parent.project_json.surveys[survey.replace(\".csv\", \"\")];\n        survey_obj.mods = parent.parent.project_json.mods;\n      } else {\n        bootbox.alert(\"Survey \" + survey + \" doesn't appear to exist\");\n      }\n    }\n    process_returned_questionnaire(survey_content);\n  }\n\n  function process_question(row, row_no) {\n    //row.values = row.values == \"\" ? row.answers : row.values;\n    if (row_check(\"page_break\", row)) {\n      page_break_management.breaks_remaining++;\n      question_td =\n        \"</tr></table><table id='table\" +\n        page_break_management.breaks_remaining +\n        \"' style='display:none' class='table_break'></tr>\";\n    } else {\n      if (\n        (typeof row[\"values\"] !== \"undefined\") &\n        (typeof row[\"values\"] !== \"function\")\n      ) {\n        //to address microsoft edge issue.\n        value_array = row[\"values\"].split(\"|\");\n      } else {\n        value_array = \"\";\n      }\n\n      if (row[\"item_name\"].indexOf(\" \") !== -1) {\n        bootbox.alert(\n          \"Please note that the 'item name' '\" +\n            row[\"item_name\"] +\n            \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\"\n        );\n      }\n\n      /*\n       * class for scoring\n       */\n\n      var this_class = \"\";\n      for (var i = 0; i < scoring_object.scales.length; i++) {\n        if (row[scoring_object.scales[i].toLowerCase()] == \"1\") {\n          this_class +=\n            scoring_object.scales[i]\n              .toLowerCase()\n              .replace(\"score: \", \"\")\n              .replace(/ |-/, \"\") + \" \";\n        }\n        if (row[scoring_object.scales[i].toLowerCase()] == \"r1\") {\n          this_class +=\n            scoring_object.scales[i]\n              .toLowerCase()\n              .replace(\"score: \", \"\")\n              .replace(\" \", \"_\") + \"-r1 \";\n        }\n      }\n\n      /*\n       * adding to row to help with \"write\" function\n       */\n      var row_x = JSON.parse(JSON.stringify(row));\n      row_x[\"row_no\"] = row_no;\n      row_x[\"this_class\"] = this_class;\n\n      [feedback_array, feedback_color] = get_feedback(row);\n\n      var survey_id = \"survey_\" + row[\"item_name\"].toLowerCase();\n\n      question_td =\n        $(\"<input>\")\n          .attr(\"type\", \"hidden\")\n          .addClass(\"response_element\")\n          .addClass(\"row_\" + row_no)\n          .prop(\"id\", survey_id + \"_response\")\n          .prop(\"name\", survey_id + \"_response\")\n          .val(\"\")[0].outerHTML +\n        $(\"<input>\")\n          .attr(\"type\", \"hidden\")\n          .prop(\"id\", survey_id + \"_value\")\n          .prop(\"name\", survey_id + \"_value\")\n          .val(\"\")[0].outerHTML;\n\n      /*\n       * Survey settings\n       */\n      [row_ques_perc, row_resp_perc] = row_perc(row[\"question_width\"]);\n\n      if (typeof settings.feedback_before_response == \"undefined\") {\n        settings.feedback_before_response = true;\n      }\n\n      if (typeof settings.lock_after_feedback == \"undefined\") {\n        settings.lock_after_feedback = false;\n      }\n\n      if (typeof row[\"type\"] == \"undefined\") {\n        return false;\n      }\n\n      if (\n        typeof survey_obj.mods !== \"undefined\" &&\n        typeof survey_obj.mods[row.type] !== \"undefined\"\n      ) {\n        var mod_html = survey_obj.mods[row.type].contents;\n\n        Object.keys(row).forEach(function (attribute) {\n          mod_html = mod_html.replaceAll(\n            \"{{\" + attribute + \"}}\",\n            row[attribute]\n          );\n        });\n        question_td += mod_html;\n      } else {\n        switch (row[\"type\"].toLowerCase()) {\n          case \"page_start\":\n            //var tabs_html = $(\"#survey_tabs\").html();\n            if (settings.tab_hor_vert == \"horizontal\") {\n              span_div = \"span\";\n            } else if (settings.tab_hor_vert == \"vertical\") {\n              span_div = \"div\";\n            }\n            if (typeof survey_obj.tabs == \"undefined\") {\n              survey_obj.tabs = 0;\n            } else {\n              survey_obj.tabs++;\n            }\n            if (survey_obj.tabs == 0) {\n              //i.e. is the first tab\n              active_button = \"btn-outline-primary active\";\n            } else {\n              active_button = \"btn-secondary disabled\";\n            }\n            if (settings.tab_hor_vert == \"vertical\") {\n              var vert_btn_block = \"btn-block\";\n            } else {\n              var vert_btn_block = \"\";\n            }\n            $(\"#survey_tabs\").append(\n              $(\"<\" + span_div + \">\")\n                .addClass(\"btn-group-toggle\")\n                .attr(\"data-toggle\", \"buttons\")\n                .append(\n                  $(\"<label>\")\n                    .addClass(\"btn\")\n                    .addClass(\"show_tab\")\n                    .html(row[\"text\"])\n                    .prop(\"id\", \"tab_\" + survey_obj.tabs + \"_button\")\n                    .append(\n                      $(\"<input>\")\n                        .attr(\"autocomplete\", \"off\")\n                        .attr(\"checked\", true)\n                        .attr(\"type\", \"checkbox\")\n                    )\n                )[0].outerHTML\n            );\n\n            page_break_indexes = [];\n            survey_obj.data.forEach(function (row, this_index) {\n              if (\n                typeof row.type !== \"undefined\" &&\n                row.type.toLowerCase() == \"page_start\"\n              ) {\n                page_break_indexes.push(this_index);\n              }\n            });\n\n            if (survey_obj.tabs > 0) {\n              question_td\n                .append(\n                  $(\"<div>\")\n                    .addClass(\"survey_page\")\n                    .css(\"display\", \"none\")\n                    .prop(\"id\", \"tab_\" + survey_obj.tabs)\n                )\n                .append(\n                  $(\"<table>\")\n                    .addClass(\"table_break\")\n                    .prop(\"id\", \"table_\" + survey_obj.tabs)\n                    .append(\"<tr>\")\n                );\n            } else {\n              question_td\n                .append(\n                  $(\"<div>\")\n                    .addClass(\"survey_page\")\n                    .prop(\"id\", \"tab_\" + survey_obj.tabs)\n                )\n                .append(\n                  $(\"<table>\")\n                    .addClass(\"table_break\")\n                    .prop(\"id\", \"table_\" + survey_obj.tabs)\n                    .append(\"<tr>\")\n                );\n            }\n            break;\n          case \"checkbox\":\n          case \"checkbox_vertical\":\n            question_td += write(\"checkbox_vertical\", row_x);\n            break;\n          case \"checkbox_horizontal\":\n            question_td += write(\"checkbox_horizontal\", row_x);\n            break;\n          case \"checkbox_single\":\n            question_td += write(\"checkbox_single\", row_x);\n            break;\n          case \"date\":\n            question_td += write(\"date\", row_x);\n            break;\n          case \"dropdown\":\n          case \"select\":\n            question_td += write(\"dropdown\", row_x);\n            break;\n          case \"email\":\n            question_td += write(\"email\", row_x);\n            break;\n          case \"google_slide\":\n          case \"jumbled\":\n          case \"instruct\":\n            // these are defined elsewhere to take the whole row\n            break;\n          case \"likert\":\n            question_td += write(\"likert\", row_x);\n            break;\n          case \"number\":\n            question_td += write(\"number\", row_x);\n            break;\n          case \"para\":\n            question_td += write(\"para\", row_x);\n            break;\n          case \"radio\":\n          case \"radio_vertical\":\n            question_td += write(\"radio_vertical\", row_x);\n            break;\n          case \"radio_horizontal\":\n            question_td += write(\"radio_horizontal\", row_x);\n            break;\n\n          case \"report_score\":\n            question_td.append(\n              $(\"<input>\")\n                .addClass(\"form-control\")\n                .addClass(\"score_\" + row[\"item_name\"])\n                .addClass(row[\"item_name\"] + \"_item\")\n                .addClass(\"row_\" + row_no)\n                .attr(\"disabled\", true)\n                .attr(\"type\", \"text\")\n                .prop(\"name\", \"survey_\" + row[\"item_name\"].toLowerCase())\n            );\n            break;\n\n          case \"text\":\n            question_td += write(\"text\", row_x);\n            break;\n        }\n      }\n      if (feedback_array) {\n        question_td.append(\n          $(\"<button>\")\n            .addClass(\"btn\")\n            .addClass(\"btn-outline-info\")\n            .addClass(\"feedback_btn\")\n            .addClass(row[\"item_name\"] + \"_item\")\n            .addClass(\"row_\" + row_no)\n            .html(\"Show\")\n            .on(\"click\", function () {\n              reveal_answers(this);\n            })\n            .prop(\n              \"id\",\n              \"reveal_\" + row[\"item_name\"].toLowerCase() + \"_feedback\"\n            )\n        );\n      }\n    }\n    if (typeof row[\"type\"] == \"undefined\") {\n      return \"\";\n    } else {\n      if (row[\"type\"].toLowerCase() == \"instruct\") {\n        row_html = write(\"instruct\", row);\n      } else if (row[\"type\"].toLowerCase() == \"jumbled\") {\n        //row_html  = question_td + write(\"jumbled\",row); <-- this is better, but being paused for placement work Anthony is doing\n        row_html = write(\"jumbled\", row);\n      } else if (row[\"type\"].toLowerCase() == \"likert\") {\n        if (\n          typeof row[\"side_by_side\"] !== \"undefined\" &&\n          row[\"side_by_side\"].toLowerCase() == \"yes\"\n        ) {\n          var row_html =\n            $(\"<td>\")\n              .addClass(\"text-primary\")\n              .css(\"text-align\", \"right\")\n              .css(\"width\", row_ques_perc)\n              .html(row[\"text\"])\n              .prop(\n                \"id\",\n                \"survey_\" +\n                  row[\"item_name\"].toLowerCase().replace(\" \", \"_\") +\n                  \"_question\"\n              )[0].outerHTML + $(\"<td>\").html(question_td)[0].outerHTML;\n        } else {\n          var row_html =\n            $(\"<tr>\").append($(\"<td>\").attr(\"colspan\", 2).html(row[\"text\"]))[0]\n              .outerHTML +\n            $(\"<tr>\").append(\n              $(\"<td>\")\n                .attr(\"colspan\", 2)\n                .attr(\"align\", \"center\")\n                .html(question_td)\n            )[0].outerHTML;\n        }\n      } else if (row[\"type\"].toLowerCase() == \"google_slide\") {\n        var row_html = $(\"<td>\")\n          .attr(\"colspan\", 2)\n          .html(row[\"text\"])[0].outerHTML;\n\n        //var row_html=\"<td colspan='2'>\"+row[\"text\"]+\"</label></td>\";\n      } else if (\n        typeof row[\"no_text\"] !== \"undefined\" &&\n        row[\"no_text\"] == \"on\"\n      ) {\n        var row_html = $(\"<td>\")\n          .attr(\"colspan\", 2)\n          .html(question_td)[0].outerHTML;\n\n        //var row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\n      } else {\n        if (\n          (row[\"text\"].toLowerCase() == \"page_start\") |\n          (row[\"type\"].toLowerCase() == \"page_start\")\n        ) {\n          row_html = question_td;\n        } else {\n          var row_html =\n            $(\"<td>\")\n              .addClass(\"text-primary\")\n              .css(\"text-align\", \"right\")\n              .css(\"width\", row_ques_perc)\n              .html(row[\"text\"])\n              .prop(\n                \"id\",\n                \"survey_\" +\n                  row[\"item_name\"].toLowerCase().replace(\" \", \"_\") +\n                  \"_question\"\n              )[0].outerHTML + $(\"<td>\").html(question_td)[0].outerHTML;\n        }\n      }\n      if (typeof row[\"optional\"] !== \"undefined\") {\n        if (row[\"optional\"].toLowerCase() == \"no\") {\n          proceed_object.name.push(row[\"item_name\"]);\n          proceed_object.type.push(row[\"type\"]);\n          proceed_object.break_no.push(page_break_management.breaks_remaining);\n        }\n      }\n      if (\n        typeof row[\"shuffle_question\"] == \"undefined\" ||\n        row[\"shuffle_question\"].toLowerCase() == \"off\"\n      ) {\n        this_shuffle = \"none\";\n      } else {\n        this_shuffle = row[\"shuffle_question\"];\n      }\n      return [row_html, this_shuffle];\n    }\n  }\n\n  function process_score(\n    row_no,\n    values_col,\n    this_response,\n    item,\n    values_reverse\n  ) {\n    item_values = survey_obj.data[row_no][values_col].split(\"|\");\n    if (typeof values_reverse !== \"undefined\" && values_reverse == \"r\") {\n      item_values.reverse();\n    }\n    item_answers = survey_obj.data[row_no][\"values\"].split(\"|\");\n    var this_value = item_values[item_answers.indexOf(this_response)];\n    $(\"#survey_\" + item + \"_score\").val(this_value);\n    if (typeof this_value !== \"undefined\") {\n      return parseFloat(this_value);\n    }\n  }\n\n  function process_returned_questionnaire(data) {\n    /*\n     * trim the data if it has a blank final row\n     */\n    if (data[data.length - 1].length < data[0].length) {\n      data.pop();\n    }\n\n    survey_obj.data = data;\n    survey_obj.data = Papa.unparse(survey_obj.data);\n    survey_obj.data = parent.parent.Collector.PapaParsed(survey_obj.data);\n\n    survey_obj.scales = {};\n    var col_headers = Object.keys(survey_obj.data[0]);\n    col_headers.forEach(function (header) {\n      if (header.indexOf(\"score:\") == 0) {\n        var original_header = header;\n        header = header.replace(\"score: \", \"\");\n        header = header.replace(\"score:\", \"\");\n        survey_obj.scales[header] = {};\n        survey_obj.scales[header].questions = {};\n\n        for (var i = 1; i < survey_obj.data.length; i++) {\n          row = survey_obj.data[i];\n          if (\n            row[original_header] !== \"\" &&\n            typeof row[original_header] !== \"undefined\"\n          ) {\n            survey_obj.scales[header].questions[i] = row[original_header];\n          }\n        }\n      }\n    });\n    write_survey(survey_obj.data, \"this_survey_id\");\n    $(\"#please_wait_div\").hide();\n    $(\"#proceed_button\").show();\n    $(\"html, body\").animate(\n      {\n        scrollTop: $(\"#survey_outline\").offset().top,\n      },\n      1000\n    );\n  }\n\n  function row_perc(this_rat) {\n    if (typeof this_rat == \"undefined\") {\n      row_resp_perc = \"50%\";\n      row_ques_perc = \"50%\";\n    } else {\n      row_resp_perc = parseFloat(100 - this_rat.replace(\"%\", \"\")) + \"%\";\n      row_ques_perc = parseFloat(this_rat.replace(\"%\", \"\")) + \"%\";\n    }\n    return [row_ques_perc, row_resp_perc];\n  }\n\n  function response_check(submitted_element) {\n    switch (submitted_element.type) {\n      case \"checkbox\":\n        var checked_responses = $(\n          \"[name='\" + submitted_element.name + \"']:checked\"\n        );\n        if (checked_responses.length) {\n          //i.e. more than 0\n          var values = [];\n          for (var i = 0; i < checked_responses.length; i++) {\n            values.push(checked_responses[i].value);\n          }\n          $(\"#\" + submitted_element.name + \"_response\").val(\n            JSON.stringify(values)\n          );\n        } else {\n          $(\"#\" + submitted_element.name + \"_response\").val(\"\");\n        }\n        break;\n\n      case \"button\":\n        $(\"#\" + submitted_element.name + \"_response\").val(\n          submitted_element.value\n        );\n        break;\n\n      case \"number\":\n      case \"radio\":\n      case \"select-one\":\n      case \"text\":\n      case \"textarea\":\n        $(\"#\" + submitted_element.name + \"_response\").val(\n          submitted_element.value\n        );\n        break;\n    }\n    update_score();\n  }\n\n  function retrieve_row_no_item_name(this_element) {\n    var these_classes = this_element.className.split(\" \");\n    var row_no;\n    var item_name;\n    these_classes.forEach(function (this_class) {\n      if (this_class.indexOf(\"row_\") > -1) {\n        row_no = this_class.replace(\"row_\", \"\");\n      }\n      if (this_class.indexOf(\"_item\") > -1) {\n        item_name = this_class.replace(\"_item\", \"\").toLowerCase();\n      }\n    });\n    return [row_no, item_name];\n  }\n\n  function reveal_answers(this_element) {\n    var this_response = $(\n      \"#\" +\n        this_element.id\n          .replace(\"reveal_\", \"survey_\")\n          .replace(\"_feedback\", \"_response\")\n    ).val();\n    response_present = this_response == \"\" ? false : true;\n\n    if (\n      settings.feedback_before_response == false &&\n      response_present == false\n    ) {\n      bootbox.alert(\"Please respond before trying reveal the feedback.\");\n    } else {\n      if ($(\"#\" + this_element.id).hasClass(\"btn-outline-info\")) {\n        $(\".\" + this_element.id.replace(\"reveal_\", \"\")).show(500);\n        if (settings.lock_after_feedback) {\n          var item_class = this_element.id\n            .replace(\"_feedback\", \"_item\")\n            .replace(\"reveal_\", \"\");\n          $(\".\" + item_class).prop(\"disabled\", true);\n          document.getElementsByClassName(item_class).title =\n            \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\n          $(\"#\" + this_element.id)\n            .addClass(\"btn-info\")\n            .removeClass(\"btn-outline-info\")\n            .html(\"Locked\");\n          document.getElementById(this_element.id).title =\n            \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\n          $(\"#\" + this_element.id).addClass(\"disabled\");\n        } else {\n          $(\"#\" + this_element.id)\n            .html(\"Hide\")\n            .removeClass(\"btn-outline-info\")\n            .addClass(\"btn-info\");\n        }\n      } else {\n        $(\".\" + this_element.id.replace(\"reveal_\", \"\")).hide(500);\n        $(\"#\" + this_element.id)\n          .html(\"Show\")\n          .addClass(\"btn-outline-info\")\n          .removeClass(\"btn-info\");\n      }\n    }\n  }\n\n  function row_check(type, row) {\n    if ((type = \"page_break\")) {\n      return (\n        typeof row[\"text\"] !== \"undefined\" &&\n        typeof row[\"type\"] !== \"undefined\" &&\n        (row[\"text\"].toLowerCase() == \"page_break\") |\n          (row[\"type\"].toLowerCase() == \"page_break\")\n      );\n    } else if ((type = \"\")) {\n      //do nothing\n    }\n  }\n\n  // http://stackoverflow.com/questions/962802#962890\n  function shuffle(array) {\n    var tmp,\n      current,\n      top = array.length;\n    if (top)\n      while (--top) {\n        current = Math.floor(Math.random() * (top + 1));\n        tmp = array[current];\n        array[current] = array[top];\n        array[top] = tmp;\n      }\n    return array;\n  }\n\n  function shuffle_answers(row) {\n    if (\n      typeof row[\"shuffle_answers\"] !== \"undefined\" &&\n      row[\"shuffle_answers\"].toLowerCase() == \"yes\"\n    ) {\n      var answers = row[\"answers\"].split(\"|\");\n      order = shuffle([...Array(answers.length).keys()]);\n\n      var ordered_answers = order.map(function (position) {\n        return answers[position];\n      });\n      row[\"answers\"] = ordered_answers.join(\"|\");\n\n      if (row[\"values\"].indexOf(\"|\") !== -1) {\n        var values = row[\"values\"].split(\"|\");\n        var ordered_values = order.map(function (position) {\n          return values[position];\n        });\n        row[\"values\"] = ordered_values.join(\"|\");\n      }\n    }\n    return row;\n  }\n\n  function update_score() {\n    var scales = Object.keys(survey_obj.scales);\n    scales.forEach(function (scale) {\n      this_scale = survey_obj.scales[scale];\n      var questions = Object.keys(this_scale.questions);\n      var this_score = 0;\n      complete_score = true;\n\n      questions.forEach(function (row_no) {\n        var item = survey_obj.data[row_no].item_name.toLowerCase();\n        var this_response = $(\"#survey_\" + item + \"_value\").val();\n        var normal_reverse = this_scale.questions[row_no];\n\n        if (normal_reverse.indexOf(\"-\") == -1) {\n          var multiplier = parseFloat(normal_reverse.replace(\"r\", \"\"));\n          if (normal_reverse.indexOf(\"r\") == 0) {\n            //reverse the values\n\n            this_value = process_score(\n              row_no,\n              \"values\",\n              this_response,\n              item,\n              \"r\"\n            );\n          } else {\n            this_value = process_score(row_no, \"values\", this_response, item);\n          }\n        } else {\n          values_reverse = normal_reverse.split(\"-\");\n          values_col = values_reverse[0].toLowerCase();\n          normal_reverse = values_reverse[1];\n          var multiplier = parseFloat(normal_reverse.replace(\"r\", \"\"));\n\n          if (normal_reverse.indexOf(\"r\") == 0) {\n            //reverse the values\n            this_value = process_score(\n              row_no,\n              values_col,\n              this_response,\n              item,\n              \"r\"\n            );\n          } else {\n            this_value = process_score(row_no, values_col, this_response, item);\n          }\n        }\n        if (typeof this_value !== \"undefined\") {\n          this_score += multiplier * this_value;\n        } else {\n          complete_score = false;\n        }\n      });\n      if (complete_score) {\n        $(\".score_\" + scale)\n          .addClass(\"bg-success\")\n          .removeClass(\"bg-danger\")\n          .addClass(\"text-light\")\n          .prop(\"title\", \"All relevant questions have been answered\");\n      } else {\n        $(\".score_\" + scale)\n          .removeClass(\"text-success\")\n          .addClass(\"bg-danger\")\n          .addClass(\"text-light\")\n          .prop(\n            \"title\",\n            \"At least one relevant questions has NOT been answered\"\n          );\n      }\n      $(\".score_\" + scale).val(this_score);\n    });\n  }\n\n  function write(type, row) {\n    var this_html = \"\";\n    [feedback_array, feedback_color] = get_feedback(row);\n    row = shuffle_answers(row);\n    row[\"item_name\"] = row[\"item_name\"].toLowerCase();\n\n    if (type == \"checkbox_horizontal\") {\n      var options = row[\"answers\"].split(\"|\");\n      var this_table = $(\"<table>\");\n      this_row = this_table[0].insertRow();\n      for (var i = 0; i < options.length; i++) {\n        var this_cell = this_row.insertCell();\n        var this_div = $(\"<div>\");\n        this_div.addClass(\"custom-control\");\n        this_div.addClass(\"custom-checkbox\");\n        var this_input = $(\"<input>\");\n        this_input[0].type = \"checkbox\";\n        this_input[0].id = row[\"item_name\"] + i;\n        this_input[0].name = \"survey_\" + row[\"item_name\"];\n        this_input\n          .addClass(\"custom-control-input\")\n          .addClass(\"response\")\n          .addClass(row[\"this_class\"])\n          .addClass(row[\"custom-control\"])\n          .addClass(row[\"custom-checkbox\"])\n          .addClass(row[\"item_name\"] + \"_item\")\n          .addClass(\"row_\" + row[\"row_no\"]);\n        var this_label = $(\"<label>\");\n        this_label[0].htmlFor = row[\"item_name\"] + i;\n        this_label[0].innerText = options[i];\n        this_label.addClass(\"custom-control-label\");\n        this_div.append(this_input).append(this_label);\n        this_cell.innerHTML = this_div[0].outerHTML;\n      }\n\n      this_html += this_table[0].outerHTML;\n    } else if (type == \"checkbox_single\") {\n      var this_div = $(\"<div>\");\n      this_div.attr(\"data-toggle\", \"buttons\");\n      this_div.addClass(\"btn-group-toggle\");\n      var this_label = $(\"<label>\");\n      this_label.addClass(\"btn\");\n      this_label.addClass(\"btn-outline-primary\");\n      this_label.html(row[\"answers\"]);\n      var this_checkbox = $(\"<input>\");\n      this_checkbox[0].id = row[\"item_name\"];\n      this_checkbox[0].name = \"survey_\" + row[\"item_name\"].toLowerCase();\n      this_checkbox[0].type = \"checkbox\";\n      this_checkbox.attr(\"checked\", true);\n      this_checkbox\n        .addClass(\"response\")\n        .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\n      this_div.append(this_label);\n      this_label.append(this_checkbox);\n      this_html += this_div[0].outerHTML;\n    } else if (type == \"checkbox_vertical\") {\n      var options = row[\"answers\"].split(\"|\");\n      var values = row[\"values\"].split(\"|\");\n      for (var i = 0; i < options.length; i++) {\n        feedback_string = generate_feedback_string(\n          feedback_array,\n          i,\n          feedback_color,\n          row\n        );\n        var this_div = $(\"<div>\");\n        this_div.addClass(\"custom-control\").addClass(\"custom-checkbox\");\n        var this_checkbox = $(\"<input>\");\n        this_checkbox[0].id = row[\"item_name\"] + i;\n        this_checkbox[0].value = options[i];\n        this_checkbox[0].type = \"checkbox\";\n        this_checkbox[0].name = \"survey_\" + row[\"item_name\"].toLowerCase();\n        this_checkbox\n          .addClass(\"custom-control-input\")\n          .addClass(row[\"this_class\"])\n          .addClass(\"custom-control\")\n          .addClass(\"custom-checkbox\")\n          .addClass(\"response\")\n          .addClass(row[\"item_name\"] + \"_item_row\");\n        var this_label = $(\"<label>\");\n        this_label[0].htmlFor = row[\"item_name\"] + i;\n        this_label[0].innerHTML = options[i];\n        this_label.addClass(\"custom-control-label\");\n        this_div.append(this_checkbox).append(this_label);\n\n        this_html += this_div[0].outerHTML;\n      }\n      if (\n        typeof row[\"other\"] !== \"undefined\" &&\n        row[\"other\"].toLowerCase() == \"yes\"\n      ) {\n        var this_div = $(\"<div>\");\n        this_div.addClass(\"custom-control\").addClass(\"custom-checkbox\");\n        var this_checkbox = $(\"<input>\");\n        this_checkbox[0].id = row[\"item_name\"] + \"_other\";\n        this_checkbox[0].value = \"Other\";\n        this_checkbox[0].type = \"checkbox\";\n        this_checkbox[0].name = \"survey_\" + row[\"item_name\"].toLowerCase();\n        this_checkbox\n          .addClass(\"custom-control-input\")\n          .addClass(row[\"this_class\"])\n          .addClass(\"custom-control\")\n          .addClass(\"custom-checkbox\")\n          .addClass(\"response\")\n          .addClass(row[\"item_name\"] + \"_item_row\");\n        var this_label = $(\"<label>\");\n        this_label[0].htmlFor = row[\"item_name\"] + \"_other\";\n        this_label[0].innerHTML = \"Other\";\n        this_label.addClass(\"custom-control-label\");\n        this_div.append(this_checkbox).append(this_label);\n\n        this_html += this_div[0].outerHTML;\n\n        var text_input = $(\"<input>\");\n        text_input.addClass(\"form-control\");\n        text_input.attr(\n          \"placeholder\",\n          \"(Please specify if you selected 'Other')\"\n        );\n        text_input[0].name =\n          \"survey_\" + row[\"item_name\"].toLowerCase() + \"_other\";\n        this_html += text_input[0].outerHTML;\n      }\n    } else if (type == \"date\") {\n      var input = $(\"<input>\");\n      input\n        .addClass(\"response\")\n        .addClass(\"custom-control\")\n        .addClass(\"datepicker\")\n        .addClass(\"date\")\n        .addClass(row[\"item_name\"] + \"_item\")\n        .addClass(\"row_\" + row[\"row_no\"])\n        .attr(\"name\", \"survey_\" + row[\"item_name\"])\n        .attr(\"type\", \"text\");\n    } else if (type == \"dropdown\") {\n      var options = row[\"answers\"].split(\"|\");\n      var this_dropdown = $(\"<select>\");\n      this_dropdown\n        .addClass(\"form-select\")\n        .addClass(\"response\")\n        .addClass(\"txt-primary\")\n        .addClass(row[\"item_name\"] + \"_item\")\n        .addClass(\"row_\" + row[\"row_no\"])\n        .addClass(\"collector_button\")\n        .attr(\"name\", \"survey_\" + row[\"item_name\"])\n        .css(\"margin\", \"0px\")\n        .css(\"width\", \"auto\");\n\n      /* this will be necessary to tidy up jumbled sentences\n    if(typeof(row[\"item_name_old\"]) !== \"undefined\"){\n      this_dropdown.addClass(row[\"item_name_old\"] + \"_item\");\n    }\n    */\n\n      this_dropdown.append(\n        \"<option selected disabled hidden>-- no option selected --</option>\"\n      );\n      options.forEach(function (this_option) {\n        this_dropdown.append(\"<option>\" + this_option + \"</option>\");\n      });\n      var this_html = this_dropdown[0].outerHTML;\n    } else if (type == \"email\") {\n      var this_input = $(\"<input>\");\n      this_input\n        .addClass(\"form-control\")\n        .addClass(\"response\")\n        .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\n        .attr(\"type\", \"email\")\n        .attr(\"name\", \"survey_\" + row[\"item_name\"]);\n    } else if (type == \"instruct\") {\n      this_html += \"<td colspan='2'>\" + row[\"text\"] + \"</td>\";\n    } else if (type == \"jumbled\") {\n      var this_td = $(\"<td>\");\n      this_td.attr(\"colspan\", 2);\n\n      var this_div = $(\"<div>\");\n      this_div\n        .addClass(\"form-inline\")\n        .addClass(\"bg-secondary\")\n        .addClass(\"text-white\")\n        .css(\"width\", \"100%\")\n        .css(\"padding\", \"20px\")\n        .css(\"margin\", \"20px\")\n        .css(\"border-radius\", \"5px\");\n\n      var question = row[\"text\"].split(\"|\");\n      questions_html = question\n        .map(function (text, index) {\n          if (index == question.length - 1) {\n            return text;\n          } else {\n            var row_x = row;\n            row_x[\"item_name_old\"] = row_x[\"item_name\"];\n            row_x[\"item_name\"] = row_x[\"item_name\"] + \"_\" + index;\n            var row_html =\n              text +\n              write(\"dropdown\", row_x).replace(\"margin: 0px\", \"margin: 5px\");\n            row_x[\"item_name\"] = row_x[\"item_name_old\"];\n            return row_html;\n          }\n        })\n        .join(\"\");\n\n      this_td.append(this_div);\n      this_div.append(questions_html);\n\n      this_html = this_td[0].outerHTML;\n    } else if (type == \"likert\") {\n      // set styles\n      if (typeof row[\"btn_width\"] == \"undefined\") {\n        row[\"btn_width\"] = \"auto\";\n      }\n      if (typeof row[\"side_width\"] == \"undefined\") {\n        var side_width = \"auto\";\n      }\n\n      // create and build these elements\n      var this_div = $(\"<div>\");\n      if (typeof row[\"side_text\"] !== \"undefined\" && row[\"side_text\"] !== \"\") {\n        side_text = row[\"side_text\"].split(\"|\");\n        side_text = side_text.map(function (this_side) {\n          var this_span = $(\"<span>\");\n          this_span\n            .css(\"width\", side_width)\n            .css(\"padding\", \"20px\")\n            .addClass(\"text-primary\")\n            .html(\"<b>\" + this_side + \"</b>\");\n          return this_span[0].outerHTML;\n        });\n      } else {\n        side_text = [\"\", \"\"];\n      }\n\n      this_div\n        .addClass(\"btn-group\")\n        .addClass(\"btn-group-toggle\")\n        .append(side_text[0])\n        .attr(\"data-togle\", \"buttons\");\n\n      var options = row[\"answers\"].split(\"|\");\n      var values = row[\"values\"].split(\"|\");\n      for (var i = 0; i < options.length; i++) {\n        var this_button = $(\"<button>\");\n        this_button\n          .attr(\"autocomplete\", \"off\")\n          .attr(\"id\", \"likert_\" + row[\"row_no\"] + \"_\" + i)\n          .attr(\"onclick\", \"likert_update(this)\")\n          .attr(\"value\", values[i])\n          .addClass(\"btn\")\n          .addClass(\"btn-outline-primary\")\n          .addClass(\"survey_btn\")\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\n          .css(\"width\", row[\"btn_width\"])\n          .html(clean_item(options[i]));\n        this_div.append(this_button);\n      }\n      this_div.append(side_text[1]);\n      this_html += this_div[0].outerHTML;\n    } else if (type == \"number\") {\n      var this_input = $(\"<input>\");\n      this_input[0].type = \"number\";\n      this_input[0].name = \"survey_\" + row[\"item_name\"];\n      this_input\n        .addClass(\"response\")\n        .addClass(\"form-control\")\n        .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\n      this_html += this_input[0].outerHTML;\n    } else if (type == \"para\") {\n      var this_textarea = $(\"<textarea>\");\n      this_textarea[0].name = \"survey_\" + row[\"item_name\"];\n      this_textarea\n        .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\n        .addClass(\"response\");\n      this_textarea.css(\"width\", \"100%\").css(\"height\", \"200px\");\n      this_html += this_textarea[0].outerHTML;\n    } else if (type == \"radio_horizontal\") {\n      var options = row[\"answers\"].split(\"|\");\n      var this_table = $(\"<table>\");\n      this_row = this_table[0].insertRow();\n      for (var i = 0; i < options.length; i++) {\n        var this_cell = this_row.insertCell();\n        var this_div = $(\"<div>\");\n        this_div.addClass(\"custom-control\");\n        this_div.addClass(\"custom-radio\");\n        var this_input = $(\"<input>\");\n        this_input[0].type = \"radio\";\n        this_input[0].id = row[\"item_name\"] + i;\n        this_input[0].name = \"survey_\" + row[\"item_name\"];\n        this_input\n          .addClass(\"custom-control-input\")\n          .addClass(\"response\")\n          .addClass(row[\"this_class\"])\n          .addClass(row[\"custom-control\"])\n          .addClass(row[\"custom-radio\"])\n          .addClass(row[\"item_name\"] + \"_item\")\n          .addClass(\"row_\" + row[\"row_no\"]);\n        var this_label = $(\"<label>\");\n        this_label[0].htmlFor = row[\"item_name\"] + i;\n        this_label[0].innerText = options[i];\n        this_label.addClass(\"custom-control-label\");\n        this_div.append(this_input).append(this_label);\n        this_cell.innerHTML = this_div[0].outerHTML;\n      }\n      this_html += this_table[0].outerHTML;\n    } else if (type == \"radio_vertical\") {\n      var options = row[\"answers\"].split(\"|\");\n      var values = row[\"values\"].split(\"|\");\n      for (var i = 0; i < options.length; i++) {\n        feedback_string = generate_feedback_string(\n          feedback_array,\n          i,\n          feedback_color,\n          row\n        );\n        var this_div = $(\"<div>\");\n        this_div.addClass(\"custom-control\").addClass(\"custom-radio\");\n        var this_input = $(\"<input>\");\n        this_input[0].type = \"radio\";\n        this_input[0].id = row[\"item_name\"] + i;\n        this_input[0].value = options[i];\n        this_input[0].name = \"survey_\" + row[\"item_name\"];\n        this_input\n          .addClass(\"custom-control-input\")\n          .addClass(row[\"this_class\"])\n          .addClass(\"custom-control\")\n          .addClass(\"custom-radio\")\n          .addClass(\"response\")\n          .addClass(row[\"item_name\"] + \"_item_row_\" + row[\"row_no\"]);\n        var this_label = $(\"<label>\");\n        this_label[0].htmlFor = row[\"item_name\"] + i;\n        this_label.addClass(\"custom-control-label\");\n        this_label.html(options[i]);\n        this_div.append(this_input).append(this_label).append(feedback_string);\n        this_html += this_div[0].outerHTML;\n      }\n    } else if (type == \"text\") {\n      var this_input = $(\"<input>\");\n      this_input[0].type = \"text\";\n      this_input[0].name = \"survey_\" + row[\"item_name\"];\n      this_input\n        .addClass(\"form-control\")\n        .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\n        .addClass(\"response\");\n      this_html += this_input[0].outerHTML;\n    }\n\n    switch (type) {\n      case \"checkbox_vertical\":\n      case \"radio_vertical\":\n        // do nothing\n        break;\n      default:\n        this_html += generate_feedback_string(\n          feedback_array,\n          0,\n          feedback_color,\n          row\n        );\n        break;\n    }\n\n    return this_html;\n  }\n\n  function write_survey(this_survey, this_id) {\n    scoring_object.update_scales(this_survey);\n    survey_html = \"<table class='table_break' id='table0'>\";\n    this_survey_object = {\n      content: [],\n      shuffle_question: [],\n      content_new_order: [],\n      shuffled_content: [],\n      shuffled_arrays: {},\n    };\n\n    survey_html += \"<tr>\";\n    for (i = 0; i < this_survey.length; i++) {\n      row = this_survey[i];\n      row_html = process_question(row, i);\n      this_survey_object.content.push(row_html[0]);\n      this_survey_object.shuffle_question.push(row_html[1]);\n    }\n\n    unique_shuffles = this_survey_object.shuffle_question.filter(\n      (v, i, a) => a.indexOf(v) == i\n    ); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n    for (var i = 0; i < unique_shuffles.length; i++) {\n      if (\n        typeof unique_shuffles[i] !== \"undefined\" &&\n        unique_shuffles[i] !== \"none\" &&\n        unique_shuffles[i] !== \"\"\n      ) {\n        shuffled_content = this_survey_object.shuffle_question\n          .map(function (element, index) {\n            if (\n              typeof element !== \"undefined\" &&\n              element.toLowerCase() !== \"none\" &&\n              element.toLowerCase() == unique_shuffles[i]\n            ) {\n              return this_survey_object.content[index];\n            }\n          })\n          .filter((elm) => typeof elm !== \"undefined\");\n        new_order = shuffle(shuffled_content);\n        this_survey_object.shuffled_arrays[unique_shuffles[i]] = new_order; // add new array with dynamic name\n      }\n    }\n\n    for (var i = 0; i < this_survey_object.content.length; i++) {\n      var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(\n        this_survey_object.shuffle_question[i]\n      );\n      if (this_index !== -1) {\n        //take first item off relevant list and delete item\n        var this_item =\n          this_survey_object.shuffled_arrays[\n            Object.keys(this_survey_object.shuffled_arrays)[this_index]\n          ].shift();\n        this_survey_object.content_new_order[i] = this_item;\n      } else {\n        this_survey_object.content_new_order[i] = this_survey_object.content[i];\n      }\n    }\n\n    qs_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\n    qs_in_order += \"</tr>\";\n\n    survey_html += qs_in_order;\n    survey_html += \"</table>\";\n\n    $(\"#\" + this_id).html(survey_html);\n\n    $(\".response\").on(\"change\", function () {\n      response_check(this);\n    });\n\n    $(\"#\" + this_id).show(1000); //scroll to top\n\n    $(\".show_tab\").on(\"click\", function () {\n      if (this.className.indexOf(\"disabled\") == -1) {\n        $(\".show_tab\").removeClass(\"active\");\n        $(\".survey_page\").hide();\n        $(\"#\" + this.id.replace(\"_button\", \"\")).show();\n      } else {\n        bootbox.alert(\n          \"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\"\n        );\n      }\n    });\n  }\n\n  /*\n   * Load survey\n   */\n  current_survey = \"{{survey}}\";\n  if (typeof Phase !== \"undefined\") {\n    Phase.set_timer(function () {\n      load_survey(current_survey);\n    }, 100);\n  } else {\n    load_survey(current_survey);\n  }\n</script>\n",
      "instruct_keyboard": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-21) author: Dr. Anthony Haffey (team@someopen.solutions)\n*/\n-->\n<style>\n  #instruct_text {\n    margin: auto;\n    width: 500px;\n    padding: 50px;\n    max-height: 600px;\n    text-align: center;\n  }\n  #trial_contents {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 600;\n    height: 600;\n  }\n  * {\n    cursor: none;\n  }\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n</div>\n\n<script>\n  $(window).bind(\"keydown\", function (event) {\n    Phase.submit();\n  });\n</script>\n",
      "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n  #instruct_text {\n    margin: auto;\n    width: 500px;\n    padding: 50px;\n    max-height: 600px;\n    text-align: center;\n  }\n  #proceed_button {\n    position: absolute;\n    right: 20px;\n  }\n  #trial_contents {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 600;\n    height: 600;\n  }\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button\n      class=\"btn btn-primary\"\n      id=\"proceed_button\"\n      onclick=\"Phase.submit()\"\n    >\n      Proceed\n    </button>\n  </div>\n</div>\n"
    },
    "file": "a_and_b_certificate",
    "filetype": "",
    "graphic": {
      "files": [],
      "relevant_styles": [
        "background-color",
        "border-color",
        "border-radius",
        "border-style",
        "border-width",
        "color",
        "font-size",
        "height",
        "left",
        "top",
        "width",
        "z-index"
      ]
    },
    "user": {
      "a_and_b_certificate": "<button class='btn btn-primary' id='preview_certificate_btn' style=\"display:none\">Preview</button>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.4.1/jspdf.min.js\"></script>\n<script>\nvar recipient;\nvar nominator;\nvar reason;\nvar department;\nif(typeof(decrypted_data) !== \"undefined\"){\n  recipient = decrypted_data.responses[2].survey_recep_name;\n  nominator    = decrypted_data.responses[2].survey_sender_name;\n  reason       = decrypted_data.responses[2].survey_why;\n  department   = decrypted_data.responses[2].survey_department;\n  certificate_name = \"certificate.pdf\";\n  generate_certificate();\n}\n$(\"#preview_certificate_btn\").show();\n$(\"input[name=survey_recep_name]\").on(\"change\",function(){\n  Trial.set(\n    \"recipient\",\n    $(\"input[name=survey_recep_name]\").val());\n  });\n  $(\"input[name=survey_sender_name]\").on(\"change\",function(){\n    Trial.set(\n      \"nominator\",\n      $(\"input[name=survey_sender_name]\").val()\n    );\n  });\n  $(\"textarea[name=survey_why]\").on(\"change\",function(){\n    Trial.set(\n      \"reason\",\n      $(\"textarea[name=survey_why]\").val()\n    );\n  });\n  $(\"select[name=survey_department]\").on(\"change\",function(){\n    Trial.set(\n      \"department\",\n      $(\"select[name=survey_department]\").val()\n    );\n  /*\n    var departments = survey_obj.data.filter(function(row){\\r\\n    return row.item_name == \"department\";\\r\\n  })[0];\\r\\n  \\r\\n  var department_index = departments.answers.split(\"|\").indexOf($(\"select[name=survey_department]\").val());\\r\\n  var department_email = departments.values.split(\"|\")[department_index];\\r\\n  \\r\\n  Trial.set(\"department_email\",department_email);\\r\\n  */\n    \n  });\n  \n  $(\"#preview_certificate_btn\").on(\"click\",function(){\n    if($(\"input[name=survey_recep_name]\").val() !== undefined){\n      recipient  = $(\"input[name=survey_recep_name]\").val();\n      nominator  = $(\"input[name=survey_sender_name]\").val();\n      reason     = $(\"textarea[name=survey_why]\").val();\n      department = $(\"select[name=survey_department]\").val();\n      if(department == null){\n        bootbox.alert(\"This won't work until you select a department\");\n      }\n    } else {\n      recipient  = \"Example Recipient\";\n      nominator  = \"Example Nominator\";\n      reason     = \"Example Reason\";\n      department = \"Example Department\";\n    }\n    certificate_name = \"Preview_Only_Not_Sent_Yet.pdf\";\n    generate_certificate();\n  });\n  function generate_certificate(){\n    var uor_logo_url = \"../User/logos/UoR_logo.jpg\";\n    var A_A_logo_url = \"../User/logos/Above_and_Beyond.png\";\n    var lfe_logo_url = \"../User/logos/LFE.png\";\n    var sticker_url  = \"../User/logos/Sticker.jpg\";\n    var stars_url    = \"../User/logos/SingleStar.jpg\";\n    var uor_logo = new Image();\n    var a_a_logo = new Image();\n    var lfe_logo = new Image();\n    var sticker  = new Image();\n    var stars    = new Image();\n        uor_logo.src = uor_logo_url;\n        a_a_logo.src = A_A_logo_url;\\r\\n\\tlfe_logo.src = lfe_logo_url;\\r\\n\\tsticker.src  = sticker_url;\\r\\n\\tstars.src    = stars_url;\\r\\n\\t\\r\\n\\timages \\t\\t\\t = [uor_logo,a_a_logo,lfe_logo,sticker,stars];\\t\\t\\t\\r\\n\\timages_loaded = 0;\\r\\n\\timages.forEach(function(image){\\r\\n\\t\\timage.onload = function () {\\r\\n\\t\\t\\timages_loaded ++;\\r\\n\\t\\t\\tif(images_loaded == 5){\\r\\n\\t\\t\\t\\twrite_doc();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\tfunction write_doc(){\\t\\r\\n\\t\\tvar options = {orientation: 'p', unit: 'mm'}; //format: custom\\r\\n\\t\\tvar doc = new jsPDF(options);\\r\\n\\t\\t\\r\\n\\t\\tdoc.setLineWidth(20);\\r\\n\\t\\tdoc.setDrawColor(0, 153, 255);\\r\\n\\t\\t\\r\\n\\t\\tdoc.rect(1,1, 208, 295); //, style\\r\\n\\t\\t\\r\\n    doc.addImage(uor_logo, 'PNG', 18, 18, 40, 13);\\r\\n\\t\\tdoc.addImage(a_a_logo, 'PNG', 165, 15, 30, 30);\\r\\n\\t\\t\\r\\n    \\r\\n\\t\\tdoc.addImage(stars, 'PNG', 95, 40,  10, 10);\\r\\n\\t\\tdoc.addImage(stars, 'PNG', 95, 65,  10, 10);\\r\\n    \\r\\n    doc.addImage(stars, 'PNG', 95, 205, 10, 10);\\r\\n\\t\\tdoc.addImage(stars, 'PNG', 95, 250, 10, 10);\\r\\n\\t\\t\\r\\n\\t\\t//doc.addImage(sticker, 'JPG', 0, 0, 25, 25);\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tdoc.setFont(\"Helvetica\");\\r\\n    doc.setFontStyle(\"bold\");\\r\\n\\t\\tdoc.setFontSize(20);\\r\\n\\t\\tdoc.text(department, 103, 60, 'center'); // 'School of Psychology & Clinical Language Sciences'\\r\\n    doc.setFontStyle(\"\");\\r\\n\\t\\tdoc.text('Congratulations & thank you:', 100, 90, 'center');\\r\\n\\t\\tdoc.setTextColor(0, 0, 255);\\r\\n\\t\\tdoc.text(recipient, 100, 105, 'center');\\r\\n\\t\\tdoc.setTextColor(0, 0, 0);\\r\\n\\t\\tvar nomination_text = doc.splitTextToSize(\"You have been nominated for 'Above and Beyond' by \" + nominator + \" for the following reason:\", 160);\\r\\n\\t\\tdoc.text(nomination_text, 100, 120,\"center\");\\r\\n\\t\\tdoc.setTextColor(0, 0, 255);\\r\\n    doc.setFontSize(15);\\r\\n\\t\\tvar reason_text = doc.splitTextToSize(reason, 160);\\r\\n\\t\\tdoc.text(reason_text, 100, 150, 'center');\\r\\n\\t\\tdoc.setTextColor(0, 0, 0);\\r\\n\\t\\tdoc.setFontSize(12);\\r\\n\\t\\t\\r\\n\\t\\tvar near_bottom_text = doc.splitTextToSize(\"'Above and Beyond' is a way of showing appreciation of your colleagues. This platform has been adopted from the 'Learning from Excellence' programme used in the NHS. If you would also like to nominate a colleague for going that extra mile, or just to say thank you, please go to:\", 150);\\r\\n\\t\\tdoc.text(100, 225, near_bottom_text,\"center\");\\r\\n\\t\\tdoc.setTextColor(0, 0, 255);\\r\\n\\t\\tdoc.text(\"https://tinyurl.com/y8bdscor\", 100, 247, 'center');\\r\\n\\t\\t\\r\\n\\t\\tdoc.addImage(lfe_logo, 'PNG', 70, 265, 60, 20);\\r\\n\\t\\t\\r\\n\\t\\tdoc.setTextColor(0, 0, 153);\\r\\n\\t\\tdoc.setFontSize(10);\\r\\n\\t\\tdoc.text(\"www.learningfromexcellence.com\", 100, 293, 'center');\\r\\n\\t\\t\\r\\n\\t\\tvar this_output = doc.output();\\r\\n\\t\\t\\r\\n\\t\\tdoc.save(certificate_name);\\r\\n\\t\\t\\r\\n\\t\\tif(certificate_name == \"Preview_Only_Not_Sent_Yet.pdf\"){\\r\\n\\t\\t  bootbox.alert(\"You now have downloaded a preview. If you're happy with the preview, please do <b>NOT</b> forget to submit the actual form by clicking <b>Proceed</b>!\");\\r\\n\\t\\t} else {\\r\\n  \\t\\tbootbox.confirm(\"You can also download another certificate using the name of the nominator then recipient if they have no illegal characters in their names - do you want to try?\",function(result){\\r\\n  \\t\\t\\tif(result){\\r\\n  \\t\\t\\t\\tdoc.save(nominator+\"_nominating_\"+recipient+\".pdf\");\\r\\n  \\t\\t\\t}\\r\\n  \\t\\t});  \\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n</script>"
    },
    "version": 0
  },
  "data": {
    "servers": {}
  },
  "project_mgmt": {
    "any_loaded": false,
    "authenticated": false,
    "current_manager": "",
    "project": "",
    "projects": {
      "nomination": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,\r\n2,instruct,user,This is the start of a new experiment.,off,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"
        },
        "location": "above-and-beyond-uor/a-and-b/nomination",
        "public_key": "15/kU2SX2kQoROSFsOAKMc4Zm5x0bD55r6a2IwgV9Xs=",
        "surveys": {},
        "trialtypes": {},
        "code": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n  #instruct_text {\n    margin: auto;\n    width: 500px;\n    padding: 50px;\n    max-height: 600px;\n    text-align: center;\n  }\n  #proceed_button {\n    position: absolute;\n    right: 20px;\n  }\n  #trial_contents {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 600;\n    height: 600;\n  }\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button\n      class=\"btn btn-primary\"\n      id=\"proceed_button\"\n      onclick=\"Phase.submit()\"\n    >\n      Proceed\n    </button>\n  </div>\n</div>\n"
        },
        "procs_csv": {},
        "stims_csv": {}
      }
    },
    "incomp_process": false,
    "pipe_position": 0,
    "pipe_direction": "",
    "versions": []
  },
  "github": {
    "organization": "",
    "repository": "",
    "organizations": {}
  },
  "mods": {},
  "surveys": {
    "user_surveys": {
      "danquestionnaire.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "optional",
          "values",
          "global_var",
          "no_text",
          "shuffle_question",
          "email_when_active",
          null
        ],
        [
          "inst1",
          "Who would you like to nominate for <b>Above & Beyond</b>?",
          "instruct",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "recep_name",
          "Name",
          "text",
          "",
          "no",
          "",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "why",
          "Why would you like to nominate this person for <b>Above & Beyond</b>?",
          "para",
          "",
          "no",
          "",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "sender_name",
          "Your name",
          "text",
          "",
          "no",
          "",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "school_values",
          "Which of our School values does this nomination encapsulate?",
          "checkbox",
          "Ambitious|Inspiring|Innovative|Professional|Collaborative|Valuing Diversity|Other",
          "no",
          "Ambitious|Inspiring|Innovative|Professional|Collaborative|Valuing Diversity|Other",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "school_values_other",
          "If you selected other - please describe",
          "text",
          "",
          "",
          "",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "published",
          "We are planning to share these examples - would you be happy for this nomination to be published in the School (your name will be removed)?",
          "likert",
          "Yes|No",
          "no",
          "Yes|No",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          "department",
          "Which academic school/department is the nominee in?",
          "dropdown",
          "Institute of Education|School of Psychology & Clinical Language Sciences",
          "no",
          "haffeyjones@reading.ac.uk|haffeyjones@reading.ac.uk",
          "",
          "",
          "off",
          "ioe@reading.ac.uk|aboveandbeyond@reading.ac.uk",
          null
        ],
        [
          "prev_cert",
          "Click on \"Preview\" to have a look at how your certificate will look before clicking <b>Proceed</b> to submit your form.",
          "a_and_b_certificate",
          "",
          "",
          "",
          "",
          "",
          "off",
          "",
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "default_surveys": {
      "autism_quotient.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Score: AQ_Test",
          "Score: Social_Skill",
          "Score: Attention_switching",
          "Score: Communication",
          "Score: Imagination",
          "Score: Attention_to_detail",
          "Optional",
          "btn_width",
          "reversed"
        ],
        [
          "Instructions1",
          "<span style='color:#006699'><span style='font-size:20px'>Choose one response that best describes how strongly each item applies to you:</span></span>",
          "Instruct",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "AQ1",
          "I prefer to do things with others rather than on my own.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ2",
          "I prefer to do things the same way over and over again.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ3",
          "If I try to imagine something, I find it very easy to create a picture in my mind.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ4",
          "I frequently get so strongly absorbed in one thing that I lose sight of other things.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ5",
          "I often notice small sounds when others do not.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ6",
          "I usually notice car number plates or similar strings of information.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ7",
          "Other people frequently tell me that what I've said is impolite, even though I think it is polite.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ8",
          "When I'm reading a story, I can easily imagine what the characters might look like.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ9",
          "I am fascinated by dates.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ10",
          "In a social group, I can easily keep track of several different people's conversations.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ11",
          "I find social situations easy.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ12",
          "I tend to notice details that others do not.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ13",
          "I would rather go to a library than a party.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ14",
          "I find making up stories easy.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ15",
          "I find myself drawn more strongly to people than to things.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ16",
          "I tend to have very strong interests which I get upset about if I can't pursue.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ17",
          "I enjoy social chit-chat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ18",
          "When I talk, it isn't always easy for others to get a word in edgeways.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ19",
          "I am fascinated by numbers.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ20",
          "When I'm reading a story, I find it difficult to work out the characters' intentions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ21",
          "I don't particularly enjoy reading fiction.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ22",
          "I find it hard to make new friends.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ23",
          "I notice patterns in things all the time.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ24",
          "I would rather go to the theatre than a museum.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ25",
          "It does not upset me if my daily routine is disturbed.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ26",
          "I frequently find that I don't know how to keep a conversation going.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ27",
          "I find it easy to 'read between the lines' when someone is talking to me.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ28",
          "I usually concentrate more on the whole picture, rather than the small details.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ29",
          "I am not very good at remembering phone numbers.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ30",
          "I don't usually notice small changes in a situation, or a person's appearance.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ31",
          "I know how to tell if someone listening to me is getting bored.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ32",
          "I find it easy to do more than one thing at once.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ33",
          "When I talk on the phone, I'm not sure when it's my turn to speak.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ34",
          "I enjoy doing things spontaneously.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ35",
          "I am often the last to understand the point of a joke.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ36",
          "I find it easy to work out what someone is thinking or feeling just by looking at their face.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ37",
          "If there is an interruption, I can switch back to what I was doing very quickly.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ38",
          "I am good at social chit-chat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ39",
          "People often tell me that I keep going on and on about the same thing.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ40",
          "When I was young, I used to enjoy playing games involving pretending with other children.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ41",
          "I like to collect information about categories of things (e.g. types of car, types of bird, types of train, types of plant, etc.).",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ42",
          "I find it difficult to imagine what it would be like to be someone else.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ43",
          "I like to plan any activities I participate in carefully.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ44",
          "I enjoy social occasions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ45",
          "I find it difficult to work out people's intentions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ46",
          "New situations make me anxious.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px",
          "no"
        ],
        [
          "AQ47",
          "I enjoy meeting new people.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ48",
          "I am a good diplomat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ49",
          "I am not very good at remembering people's date of birth.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px",
          "yes"
        ],
        [
          "AQ50",
          "I find it very easy to play games with children that involve pretending.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "0|0|1|1",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px",
          "yes"
        ],
        [
          ""
        ]
      ],
      "consent_sheet_uor.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side",
          "question_width",
          ""
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Investigator 1</td>\n    <td>Investigator1@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td>Investigator 2</td>\n    <td>Investigator2@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n  </tr>\n  <tr>\n    <td>Researcher 1</td>\n    <td>Researcher1@reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Researcher 2</td>\n    <td>Researcher2@reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: [Study title]</h2>\n<h1>Consent Form</h1>",
          "instruct",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "uor_consent_1",
          "I understand that my participation in this study is voluntary and that I may withdraw any time without giving any reason.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_2",
          "I have read the information sheet about this study and the procedure of the study has been explained to me.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%"
        ],
        [
          "uor_consent_3",
          "I have been given the opportunity to ask any questions that I may have about the study and these have been answered to my satisfaction.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_4",
          "I understand that the data collected from me in this study will be preserved and made available in anonymised form, so that they can be consulted and re-used by others.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_5",
          "I am happy to be contacted about future studies (optional)",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_6",
          "First name",
          "text",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_7",
          "Last name",
          "text",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      ],
      "demographics.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Optional",
          "Values",
          "side_by_side",
          "btn_width"
        ],
        [
          "Gender",
          "Gender",
          "likert",
          "Male|Female|Other",
          "No",
          "",
          "yes",
          "100px"
        ],
        [
          "Age",
          "Age",
          "Number",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Education",
          "Education (which level are you currently in, or is the highest you've completed)",
          "Dropdown",
          "Some high school| High school graduate| Some college, no degree| Associate's degree| Bachelor's degree|Graduate degree (Master's, Doctorate, etc.)",
          "No",
          "",
          "",
          ""
        ],
        [
          "English_Fluency",
          "Do you speak English fluently?",
          "likert",
          "Yes|No",
          "No",
          "",
          "yes",
          "200px"
        ],
        [
          "English_Age",
          "At what age did you start learning English? (write \"0\" if from birth)",
          "Number",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Country",
          "What is your country of residence?",
          "Text",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Handedness",
          "What is your preferred hand?",
          "Likert",
          "Left|Right|Both",
          "No",
          "",
          "yes",
          "100px"
        ],
        [
          "ethnicity",
          "If you would like to please state your ethnicity",
          "Text",
          "",
          "Yes",
          "",
          "",
          ""
        ],
        [
          ""
        ]
      ],
      "empathy_quotient_40.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Score: EQ_Test",
          "Score: Cognitive",
          "Score: Social_Skills",
          "Score: Emotional_Reactivity",
          "optional"
        ],
        [
          "Instructions1",
          "Choose one response that best describes how strongly each item applies to you:",
          "Instruct",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "EQ1",
          "I can easily tell if someone else wants to enter a conversation.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ4",
          "I find it difficult to explain to others things that I understand easily, when they don’t understand it the first time.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ6",
          "I really enjoy caring for other people.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ8",
          "I find it hard to know what to do in a social situation.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ10",
          "People often tell me that I went too far in driving my point home in a discussion.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ11",
          "It doesn’t bother me too much if I am late meeting a friend.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ12",
          "Friendships and relationships are just too difficult, so I tend not to bother with them.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ14",
          "I often find it difficult to judge if something is rude or polite.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ15",
          "In a conversation, I tend to focus on my own thoughts rather than on what my listener might be thinking.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ18",
          "When I was a child, I enjoyed cutting up worms to see what would happen.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ19",
          "I can pick up quickly if someone says one thing but means another.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ21",
          "It is hard for me to see why some things upset people so much.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ22",
          "I find it easy to put myself in somebody else’s shoes.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ25",
          "I am good at predicting how someone will feel.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ26",
          "I am quick to spot when someone in a group is feeling awkward or uncomfortable.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ27",
          "If I say something that someone else is offended by, I think that that’s their problem, not mine.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ28",
          "If anyone asked me if I liked their haircut, I would reply truthfully, even if I didn’t like it.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ29",
          "I can’t always see why someone should have felt offended by a remark.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ32",
          "Seeing people cry doesn’t really upset me.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ34",
          "I am very blunt, which some people take to be rudeness, even though this is unintentional.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ35",
          "I do not tend to find social situations confusing.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "1",
          "",
          "no"
        ],
        [
          "EQ36",
          "Other people tell me I am good at understanding how they are feeling and what they are thinking.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ37",
          "When I talk to people, I tend to talk about their experiences rather than my own.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ38",
          "It upsets me to see an animal in pain.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ39",
          "I am able to make decisions without being influenced by people’s feelings.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ41",
          "I can easily tell if someone else is interested or bored with what I am saying.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ42",
          "I get upset if I see people suffering on news programs.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ43",
          "Friends usually talk to me about their problems as they say that I am very understanding.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ44",
          "I can sense if I am intruding, even if the other person doesn’t tell me.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ46",
          "People sometimes tell me that I have gone too far with teasing.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ48",
          "Other people often say that I am insensitive, though I don’t always see why.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ49",
          "If I see a stranger in a group, I think that it is up to them to make an effort to join in.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ50",
          "I usually stay emotionally detached when watching a film.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ52",
          "I can tune into how someone else feels rapidly and intuitively.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ54",
          "I can easily work out what another person might want to talk about.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ55",
          "I can tell if someone is masking their true emotion.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ57",
          "I don’t consciously work out the rules of social situations.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "1",
          "",
          "no"
        ],
        [
          "EQ58",
          "I am good at predicting what someone will do.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ59",
          "I tend to get emotionally involved with a friend’s problems.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ60",
          "I can usually appreciate the other person’s viewpoint, even if I don’t agree with it.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          ""
        ]
      ],
      "info_sheet.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Optional",
          "side_by_side",
          null
        ],
        [
          "Instructions1",
          "<h1>PARTICIPANT INFORMATION SHEET </h1>\n\n<h2>Title of Project:  <u><span style='color:#f20707'>[[Your project title]]</span></u>.</h2>\n\n<h3>Name of Lead Investigator:  <span style='color:#f20707'>[[Investigator]]</span> ([[<span style='color:#f20707'>Institute</span>]]) </h3>\n\n<h4>Invitation paragraph</h4>\nYou have been invited to take part in a research study.  Before you decide whether to take part it is important for you to understand why the research is being done and what it will involve.  Please take time to read the following information carefully and discuss it with friends and relatives if you wish to. Ask us if there is anything that is not clear or if you would like more information. Take time to decide whether you wish to take part or not.  Thank you for reading this.<br><br>\n\n<h4>What is the study about?</h4>\n<span style='color:#f20707'>[[describe your experiment here]]</span>.<br><br>\n\n<h4>What does the study involve?</h4>\n<span style='color:#f20707'>[[what the participant will do]]</span> <br><br>\n\n<h4>Why have I been chosen?</h4>\n<span style='color:#f20707'>[[criterion, e.g. age, etc.]]</span>  <br><br>\n\n<h4>Do I have to take part?</h4>\nIt is up to you to decide whether or not to take part.  If you do decide to take part you will be given this information sheet to keep and be asked to sign a consent form.  If you decide to take part you are still free to withdraw at any time during the data collection without giving a reason.<br><br>\n\n<h4>I am interested in taking part, what do I do next?</h4>\nPlease find a quiet room with minimal distractions. Please ensure you have a good internet connection on a PC / laptop / tablet device. <span style='color:#070ff2'>[[optional: Please do not run the study on a mobile phone]]</span>. Make sure that you have about <span style='color:#f20707'>[[time needed]]</span> minutes time to complete the study. Once ready please follow the link to the online study.<br><br>\n\n<h4>What if I agree to take part and then change my mind?</h4>\nThat is fine. If you decide to withdraw you would need to provide your participation ID to the researchers. The researcher will then delete all the data generated by that ID from their computers. <br><br>\n\n<h4>What are the possible disadvantages and risks of taking part?</h4>\n <span style='color:#f20707'>[[describe risks etc. here]]</span><br><br>\n\n<h4>What are the possible benefits of taking part? </h4>\n<span style='color:#f20707'>[[benefits here]]</span> <br><br>\n\n<h4>Who can I complain to?</h4>\nIf you have a complaint regarding anything to do with this study, you can initially approach the lead investigator <span style='color:#f20707'>[[lead investigator]]</span> (<span style='color:#f20707'>[[lead_investigator_email]]</span>).  If this achieves no satisfactory outcome, you should then contact <span style='color:#f20707'>[[person to contact next]]</span><br><br>\n\n<h4>Will my taking part in this study be kept confidential?</h4>\nAll information which is collected about you during the course of the research will be kept on a password protected database and is strictly confidential. You will be given an ID code which will be used instead of your name. Your data will be shared with the following collaborators: <br> <span style='color:#f20707'>[[list of collaborators]]</span>\n<br><br>\n\n<span style='color:#070ff2'>[[optional: Your anonymised data can be shared with other research teams interested in understating it further.]]</span><br>\nThe raw data will be stored for up to 10 years after a study has been completed.<br> Members of the faculty human research ethics committee may require access to check that the study has been conducted in accordance with the approval. <br>\n\n\n<h4>What will happen to the results of the research study?</h4>\nThe results based on performance of the group of participants will be then analysed and submitted for publication in peer reviewed scientific journals. <br><br>\n\n<h4>Who is organising and funding the research?</h4>\n<br><br><span style='color:#f20707'>[[information about researchers and funders here]]</span>\n\n<h4>Who has reviewed the study?</h4>\nThis study has been reviewed and approved by <span style='color:#f20707'>[[your ethics committee]]</span>.<br><br>\n<br>\n<h4>How is data secured?</h4>\nData is encrypted in Collector on the participant's computer. This data cannot be decrypted without the researcher's password. For more information, go to: <a target=\"_blank\" href=\"https://some-open-solutions.github.io/collector/encryption.html\">https://some-open-solutions.github.io/collector/encryption.html</a>\n<h4>Contact for Further Information</h4>\n<span style='color:#f20707'>[[your contact information]]</span>",
          "Instruct",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "Info_Accept",
          "I understand these instructions and am happy to continue",
          "likert",
          "Agree",
          "1",
          "No",
          "yes",
          null
        ],
        [
          "",
          null
        ]
      ],
      "info_sheet_uor.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side"
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Investigator 1</td>\n    <td>Investigator1@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td>Investigator 2</td>\n    <td>Investigator2@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n  </tr>\n  <tr>\n    <td>Researcher 1</td>\n    <td>Researcher1@reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Researcher 2</td>\n    <td>Researcher2@reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: [Study title]</h2>\n<h1>PARTICIPANT INFORMATION SHEET </h1>\n\nWe would be grateful if you could assist us by participating in our online study [BRIEF STUDY DESCRIPTION]. <br>\n<br>\nIn the experiment you will be presented with [DESCRIPTION OF STIMULI AND PROCEDURE]. The experiment should take no longer than [MAXIMUM TIME EXPECTED]. [DESCRIPTION OF ELIGIBILITY AND EXCLUSION CRITERIA].<br>\n<br>\nYour data will be kept confidential and securely stored, with only an anonymous number identifying it. Data collected from this study will be preserved and made available in anonymised form, so that data can be re-used by others.<br>\n<br>\n[DESCRIPTION OF RISKS e.g. We foresee few risks during the experiment, but you will be presented with some negative images, which may evoke an emotional response. Thus, the study may include a mild risk of anxiety, sadness or other emotional reactions. However, those stimuli are widely observed in our daily life. If you are concerned about the images in the study then you may discontinue your participation at any time.]<br>\n<br>\nTaking part in this study is completely voluntary; you may withdraw at any time without having to give any reason. Please feel free to ask any questions that you may have about this study at any point.<br>\n<br>\n[INFORMATION ABOUT COMPENSATION - HOW MUCH AND HOW IT WILL BE DELIVERED e.g. You will receive 0.5 credits through SONA. You will receive a £5 Amazon voucher by email. You will receive £2.50 through Prolific.]<br>\n<br>\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct ([SREC OR UREC NUMBER]).<br>\n<br>\nIf you have any questions or concerns about the research, please feel free to contact Investigator1.<br>\n<br>\nEmail: Investigator1, Tel: +44-(0)118-378-XXXX.<br>\n<br>\nThank you for your help.",
          "instruct",
          "",
          "",
          "",
          ""
        ],
        [
          ""
        ]
      ]
    },
    "preview": true
  },
  "keys": {
    "archived": [],
    "public_key": "15/kU2SX2kQoROSFsOAKMc4Zm5x0bD55r6a2IwgV9Xs="
  }
}